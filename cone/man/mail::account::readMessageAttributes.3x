.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "mail::account::readMessageAttributes" "3x" "10 April 2006" "" "mail::account Native API reference"

.SH NAME
mail::account::readMessageAttributes \- Return message metadata
.SH SYNOPSIS

.nf
#include <libmail/mail.H>
#include <libmail/envelope.H>
#include <libmail/structure.H>

class myCallbackMessage : public mail::callback::message {
public:
    void success(std::string msg);
    void fail(std::string msg);

    void messageEnvelopeCallback(size_t messageNumber,
                                 const mail::envelope &envelopeArg);

    void messageReferencesCallback(size_t messageNumber,
                                   const std::vector<std::string> &referencesArg);

    void messageArrivalDateCallback(size_t messageNumber,
                                    time_t datetime);

    void messageSizeCallback(size_t messageNumber,
                             unsigned long size);

    void messageStructureCallback(size_t messageNumber,
                                  const mail::mimestruct &messageStructure);
    void messageTextCallback(size_t messageNumber, std::string text);
};

std::cout << (float)myMessageCallback.messageTextCompleted /
             (float)myMessageCallback.messageTextEstimatedSize * 100
          << "% completed." << endl;
.fi

.nf
mail::account *account;
.fi
.sp
\fB
.sp
account->readMessageAttributes (const std::vector<size_t> \fImsgList\fB, mail::account::MessageAttributes \fIattributes\fB, myCallbackMessage &\fIcallback\fB);
\fR
.SH "USAGE"
.PP
\fBmail::account::readMessageAttributes\fR
requests metadata of messages in the currently open folder.
\fImsgList\fR specifies a list of messages.
Messages are numbered starting with message #0 and up to one
less than
\fBmail::account::getFolderIndexSize\fR(3x)()
(when \fBmail::account::getFolderIndexSize\fR returns 6,
the messages are numbered 0 through 5).
Only the messages that appear in \fImsgList\fR are
processed by this request.
\fIattributes\fR is a logical-or of the following
constants:
.TP
\fBmail::account::ARRIVALDATE\fR
When the message was added to the folder
(\fBmyCallback.messageArrivalDateCallback\fR).
.TP
\fBmail::account::MESSAGESIZE\fR
Estimated message size, in bytes
(\fBmyCallback.messageSizeCallback\fR).
.TP
\fBmail::account::ENVELOPE\fR
Message's envelope headers
(\fBmyCallback.messageEnvelopeCallback\fR, and possibly
\fBmyCallback.messageReferencesCallback\fR).
\fBmessageEnvelopeCallback\fR
receives a
mail::envelope
object that describes the "envelope", or a message summary (sender,
recipients, subject, etc...).
In some instances the
\fBmessageReferencesCallback\fR
callback will also be invoked, with an
an array of message IDs taken from the References header.
In other instances the
mail::envelope will already have the
\fBreferences\fR populated with the same
information.

\fBmessageReferencesCallback\fR
may be invoked before or after the
\fBmessageEnvelopeCallback\fR
function, if at all.
The application should be prepared to merge the information returned by
these two callbacks.
As noted below, multiple callback methods may be invoked in any order, and
the application should not make any assumption as to the relative order in
which these two methods will be invoked.

For example, it is perfectly feasible to have a request for envelopes of two
messages result in two
\fBmessageEnvelopeCallback\fR callbacks, then two
\fBmessageReferencesCallback\fR callbacks; or two instances
of
\fBmessageEnvelopeCallback\fR followed by a
\fBmessageReferencesCallback\fR that refers to the same
message.
.TP
\fBmail::account::MIMESTRUCTURE\fR
Returns a mail::mimestruct object that enumerates
the message's MIME content
(\fBmyCallback.messageStructureCallback\fR).
\fBmyCallback.messageStructureCallback\fR receives a
reference to a
mail::mimestruct
object that refers
to the entire message.
If the message contains attachments, the
\fBmail::mimestruct::getChild\fR method returns
pointers to
mail::mimestruct
objects which
refer to the individual MIME attachments.
.PP
Metadata information requested by each one of these constants is returned
by invoking the corresponding callback method in
\fIcallback\fR\&.
When requesting two or more items at once the callback functions may be
invoked in any order.
When requesting metadata from more than one message the callback functions
are invoked one for each requested message.
Each callback function receives the requested metadata item together with
\fImessageNumber\fR - which message this metadata item
relates to.
The callback functions may be invoked in any message order.
.PP
For example, when requesting both
ENVELOPE and
MIMESTRUCTURE, the possibilities are:
.TP 0.2i
\(bu
ENVELOPEs for all messages first, then all
MIMESTRUCTUREs.
.TP 0.2i
\(bu
The ENVELOPE and the
MIMESTRUCTURE for the first message, then
the ENVELOPE and the
MIMESTRUCTURE for the next message, and so on.
.sp
.RS
.B "Note:"
The mail::envelope and
mail::mimestruct
objects are destroyed immediately
after their corresponding callback method terminates.
The application should copy any objects it intends to use later.
.RE
.SH "RETURN CODES"
.PP
The application must wait until
\fIcallback\fR\&'s
\fBsuccess\fR or
\fBfail\fR method is invoked.
The \fBsuccess\fR method is invoked when this request is
succesfully processed.
The \fBfail\fR method is invoked if this request cannot
be processed.
The application must not destroy
\fIcallback\fR until either the
\fBsuccess\fR or
\fBfail\fR method is invoked.
.sp
.RS
.B "Note:"
\fIcallback\fR\&'s
\fBfail\fR method may be invoked even after other
callback methods were invoked.
This indicates that the request was partially completed before the error
was encountered.
.RE
.sp
.RS
.B "Note:"
Multiple applications may have the same account and folder opened at the
same time.
It is possible that a message referenced by this request was already
deleted by another application.
Depending on the underlying server implementation this will result in
either a failed request, invoking
\fBcallback.fail\fR, or the request completing
(\fBcallback.success\fR invoked) but without invoking
any callback function that refer to the message.
.RE
.SH "SEE ALSO"
.PP
\fBmail::account::getFolderIndexSize\fR(3x),
\fBmail::account::readMessageContent\fR(3x),
\fBmail::account::readMessageContentDecoded\fR(3x),
\fBmail::account::getFolderIndexInfo\fR(3x),
\fBmail::envelope\fR(3x),
\fBmail::mimestruct\fR(3x)\&.
