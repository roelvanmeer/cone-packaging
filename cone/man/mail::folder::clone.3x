.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAIL::FOLDER::CLONE" "3x" "10 April 2006" "" "mail::folder Native API reference"

.SH NAME
mail::folder::clone \- Clone a mail::folder object
.SH SYNOPSIS

.nf
mail::folder *folder;

mail::folder *folderCopy;
.fi
.sp
\fB
.sp
folderCopy=folder->clone(void);
\fR
.SH "USAGE"
.PP
This function creates a new
mail::folder object that refers to the
same mail folder, in every possible way.
This is usually used by some callback methods that receive pointers to
mail::folders, and wish to preserve them for the
main application (mail::folders received by
callback methods are usually destroyed as soon as the callback method
terminates).
.SH "RETURN CODES AND CALLBACKS"
.sp
.RS
.B "Note:"
mail::folders are linked to their corresponding
mail::accounts.
A mail::folder created by one
mail::account may not be used with a different
mail::folder\&.
All
mail::folders created by
a mail::account are invalidated when
this mail::account object is destroyed.
Note that the
mail::folder objects are not automatically destroyed;
the application is still responsible for destroying any remaining
mail::folders, after their
a mail::account is destroyed.
.RE
.SH "SEE ALSO"
.PP
\fBmail::folder::createSubFolder\fR(3x),
\fBmail::folder::readSubFolders\fR(3x)\&.
