.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\"     Title: mail::account::findFolder
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 05/24/2008
.\"    Manual: 


Cone: COnsole Newsreader And Emailer
.\"    Source: 
.\"
.TH "MAIL::ACCOUNT::FINDF" "3x" "05/24/2008" "" "Cone: COnsole Newsreader An"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
mail::account::findFolder - A direct short-cut to a folder
.SH "SYNOPSIS"
.sp
.RS 4
.nf



#include <libmail/mail\.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi
.RE
.sp
.sp
.RS 4
.nf
class myFolderCallback : public mail::callback::folderlist {
public:
    void success(const std::vector<const mail::folder *> &folders);
};
.fi
.RE
.sp
.RS 4
.nf
mail::account *account;

mail::folder *folder;

std::string folderPath=folder\->getPath();
.fi
.RE
.HP 41
.BI "mail::folder *folder=account->findFolder(std::string\ " "folderPath" ", myFolderCallback\ &" "folderCallback" ", myCallback\ &" "callback" ");"
.SH "USAGE"
.PP
This function is very similar to
\fBmail::account::folderFromString\fR(3x)\.
\fBmail::account::findFolder\fR
recreates a
mail::folder
object, given its server path (which is returned by
\fBmail::folder::getPath\fR(3x)\. The differences between
\fBmail::account::findFolder\fR
and
\fBmail::account::folderFromString\fR
are:
.sp
.RS 4
\h'-04'\(bu\h'+03'
\fBmail::account::folderFromString\fR
uses a string created by
\fBmail::account::folder::toString\fR, which includes all of the folder\'s properties (such as whether the folder contains messages, subfolders, or both, and its canonical name)\.
\fBmail::account::findFolder\fR
uses only the folder\'s "path", or "address" on the server\.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
The application must not destroy
\fIfolderCallback\fR
until this request fails or succeeds\.
\fIfolderCallback\fR\'s
\fBsuccess\fR
method is invoked just before the
\fIcallback\fR\'s
\fBsuccess\fR
method\.
.PP
The
\fBfolderCallback\.success\fR
method receives a vector with a single pointer
mail::folder
object, that\'s initialized to represent the folder referenced by
\fIfolderPath\fR\.
.SH "RETURN CODES AND CALLBACKS"
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\. The
\fBfail\fR
method is invoked if this request cannot be processed\. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\. This indicates that the request was partially completed before the error was encountered\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
The
\fBfolderCallback\.success\fR
method receives a (possibly empty) vector of pointers to
mail::folder
objects\. These objects will be destroyed when
\fBfolderCallback\.success\fR
terminates\. The application must use
\fBmail::folder::clone\fR(3x)
to create copies of
mail::folder
objects it wants to use later\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Both
\fBfolderCallback\.success\fR
and
\fBmyCallback\.success\fR
method will be invoked if this request succeeds\.
\fBfolderCallback\.success\fR
will be invoked before
\fBmyCallback\.success\fR
(since by definition this indicates that the request has been completed)\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

mail::folders are linked to their corresponding
mail::accounts\. A
mail::folder
created by one
mail::account
may not be used with a different
mail::folder\. All
mail::folders created by a
mail::account
are invalidated when this
mail::account
object is destroyed\. Note that the
mail::folder
objects are not automatically destroyed; the application is still responsible for destroying any remaining
mail::folders, after their a
mail::account
is destroyed\.
.SH "SEE ALSO"
.PP

\fBmail::account::folderFromString\fR(3x)\.
