.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "mail::ACCOUNT::getParentFolder" "3x" "10 April 2006" "" "mail::ACCOUNT Synchronous API reference"

.SH NAME
mail::ACCOUNT::getParentFolder \- Find parent folder
.SH SYNOPSIS

.nf
#include <libmail/sync.H>

mail::ACCOUNT *mail;
const mail::folder *folder;
mail::ACCOUNT::FolderList folderList;
.fi
.sp
\fB
.sp
bool ok=mail->getParentFolder (\fIfolder\fB, \fIfolderList\fB);
\fR

.nf
std::string errmsg=mail->getErrmsg();
.fi

.nf
size_t nFolders=folderList::size();
const mail::folder *folder=folderList[n];
.fi
.SH "USAGE"
.PP
A mail account contains folders that are arranged in a tree-like
hierarchy.
\fBmail::ACCOUNT::getParentFolder\fR finds a
\fIfolder\fR\&'s
parent folder
(\fIfolder\fR is obtained from a previous
\fBmail::ACCOUNT::getSubFolders\fR or a
\fBmail::ACCOUNT::getTopLevelFolders\fR(3x)
call).
.SH "RETURN CODES AND CALLBACKS"
.PP
This method returns true if it succeeds, or
false if it fails.
If the method fails, use
\fBmail::ACCOUNT::getErrmsg()\fR to read a brief
description of the error.
.PP
If successful, \fIfolderList\fR will contain a single
pointer to a mail::folder object that will refer
to \fIfolder\fR\&'s parent folder.
.PP
See
\fBmail::ACCOUNT::getTopLevelFolders\fR(3x)
for additional notes and instructions on handling folder lists.
.SH "SEE ALSO"
.PP
\fBmail::ACCOUNT::getSubFolders\fR(3x),
\fBmail::ACCOUNT::getTopLevelFolders\fR(3x)\&.
