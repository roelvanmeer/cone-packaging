.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "CONE" "1" "10 April 2006" "" ""

.SH NAME
cone \- Read and send E-mail messages
.SH SYNOPSIS

\fBcone\fR [ \fB-r\fR ] [ \fB-c \fIdirectory\fB\fR ]

.SH "USAGE"
.PP
\fBCone\fR is a console newsreader and E-mail.
It is an interactive program for reading and sending E-mail messages.
\fBCone\fR is designed to be intuitive and easy to learn.
Starting \fBCone\fR for the first time displays two links: one for the
default system mailbox, and a second link to a quick online tutorial.
The online tutorial provides a brief overview of using \fBCone\fR for
reading and sending E-mail.
.PP
Pressing \fBQ\fR on most screens
exits \fBCone\fR\&.
\fBCone\fR tries to gracefully log out and shut down all server connections.
If \fBCone\fR cannot log out of a remote server because the remote server is
down, press \fBCTRL\fR-\fBC\fR
(after \fBQ\fR to terminate \fBCone\fR).
.PP
Use \fBCTRL\fR-\fBZ\fR to temporarily suspend \fBCone\fR
and drop back to the shell prompt.
\fBCone\fR remains suspended in the background, and may be restarted by using
the shell's \fBfg\fR command.
.sp
.RS
.B "Note:"
Connections to remote mail servers may be disconnected
for inactivity if \fBCone\fR remains suspended for a prolonged period of time.
When suspended, \fBCone\fR cannot maintain any active connections to remote
mail servers.
.RE
.PP
The \fB-c\fR option names a directory where \fBCone\fR saves its
configuration files, and defaults to \fI$HOME/.cone\fR\&.
The configuration directory will be created, if necessary.
.PP
The \fB-r\fR option recovers a backup copy of \fBCone\fR\&'s configuration
file.
This option is primarily used when remote configuration is enabled, but
the folder that contains \fBCone\fR\&'s configuration on a remote server was deleted,
or is not available.
In all cases, \fBCone\fR makes a daily local configuration file backup.
The \fB-r\fR option searches for local configuration file
backups, and offers an option to restore the backup copy.
.SS "READING LOCAL MAIL WITH CONE"
.PP
\fBCone\fR reads local mail from either maildirs (the preferred format) or
mailbox files (or "mboxes").
When mboxes are used,
\fBCone\fR does not read the system mailbox file directly (usually
\fI/var/spool/something\fR).
All messages in the system mailbox are automatically moved to
\fI$HOME/Inbox\fR, which is then accessed as if it was the
system mailbox.
Starting \fBCone\fR for the first time on an mbox-based system automatically
copies all existing mail from the system mailbox file
to \fI$HOME/Inbox\fR\&.
.PP
This is an intentional design choice.  Normal user application cannot
create new files in \fI/var/spool\fR; all they can do is
read the mailbox file from \fI/var/spool\fR\&.
Therefore, the only way to update the mailbox file is by
rewriting it from scratch (more or less).
While the mailbox file is in the process of being rewritten, if the \fBCone\fR
process is interrupted, or killed, the resulted in a corrupted
system mailbox.
There are way to minimize this vulnerability, but it cannot be eliminated
completely.
Some Linux kernels use an ``OOM killer''
that may terminate any process when
the system memory is low.
There is no way to completely prevent corrupted system
mailbox files on those
kernels.
.PP
\fBCone\fR uses an alternative way of updating mboxes.
\fBCone\fR updates mboxes by creating a new mbox file separately,
then replacing the original mbox file with the new version.
Unfortunately this cannot be done with the system mailbox file, because of
the restricted access rights on the system spool directory.
To solve this problem \fBCone\fR automatically copies the system mailbox file
to \fI$HOME/Inbox\fR, each time the system mailbox file is
opened and whenever new mail is available.
.SS "VIEWING MIME ATTACHMENTS"
.PP
\fBCone\fR displays text and simple HTML content by itself.
Other kinds of attachments may be viewed by using a helper script.
\fBCone\fR invokes a helper script to open a MIME attachment.
The helper script's name is ``\fITYPE\fR\&.\fISUBTYPE\fR\&.filter'',
where ``TYPE'' and ``SUBTYPE'' corresponds to the
MIME type and subtype, accordingly.
\fBCone\fR looks for helper scripts in
\fI$HOME/.cone\fR (or the directory specified by
\fB-c\fR) and in
\fI@datadir@/cone\fR\&.
.PP
For example, a helper script named ``IMAGE.GIF.filter'', if
installed, is invoked to process image/gif MIME
attachments.
.SS "HELPER SCRIPTS"
.PP
\fBCone\fR runs each helper script twice:
.PP

.nf
TYPE.SUBTYPE.filter check \fItype/subtype\fR
.fi
.PP
When the first argument is ``check'', the helper script should
terminate with a zero exit code if it is willing to process an attachment
whose MIME type is specified by the second argument.
A script or a program that's has multiple ``TYPE.SUBTYPE.filter''
links may use the second argument to identify the attachment's mime type.
If the helper script is unable to process the attachment, at this time,
it should terminate with a non-zero exit code.
.PP
The default helper script for image attachments terminates with a non-zero
exit code if the \fBDISPLAY\fR environment variable is not
initialized.
When invoked from an X-Windows terminal, image attachments will be
automatically displayed; and image attachments are ignored otherwise on
non-graphical consoles.
.PP

.nf
TYPE.SUBTYPE.filter filter \fItype/subtype\fR \fIfilename\fR
.fi
.PP
If the helper script initially terminates with a zero exit code, it will
be invoked again after the MIME attachment is
downloaded and decoded.
The first argument will be ``filter'',
and the attachment's filename is specified by the third argument.
.sp
.RS
.B "Note:"
This is a temporary file, whose extension will not necessary be the
file extension associated with this MIME type.
.RE
.PP
The helper script should read and process the file specified by the third
argument.
\fBCone\fR interprets
anything the helper script writes to standard output as HTML.
.sp
.RS
.B "Note:"
\fBCone\fR waits until the helper script terminates before displaying the rest
of the message.
Most helper scripts should run in the background.
However, note that \fBCone\fR removes the temporary file when the original
message is closed; the temporary file may be removed any time after the
helper script terminates.
The helper script should make its own private copy of the file, if
necessary.
.RE
.SS "ACTIVATING URLS"
.PP
\fBCone\fR has limited ability to activate URLs in
HTML messages.
\fBCone\fR handles ``mailto:''
URLs by itself.
For other
URLs
\fBCone\fR runs \fI@datadir@/cone/method\&.handler\fR
with the
URL passed as an argument.
.PP
\fBCone\fR
installs \fIhttp.handler\fR
(hard linked to \fIhttps.handler\fR).
This script checks if \fIfirefox\fR or
\fImozilla\fR binaries are found in the current
\fBPATH\fR, and runs them.
.sp
.RS
.B "Note:"
\fBCone\fR also looks
\fImethod\&.handler\fR in
\fI$HOME/.cone\fR (or the directory specified by
\fB-c\fR) in addition to
\fI@datadir@/cone\fR\&.
.RE
.SH "FILES"
.TP
\fB\fI$HOME/.cone\fB\fR
Configuration files, and other application data.
May be modified by the \fB-c\fR option.
.TP
\fB\fI@datadir@/cone/IMAGE.GIF.filter\fB, \fI@datadir@/cone/IMAGE.JPEG.filter\fB, \fI@datadir@/cone/IMAGE.PNG.filter\fB, \fI@datadir@/cone/APPLICATION.PDF.filter\fB\fR
Default helper scripts distributed with \fBCone\fR\&.
.SH "SEE ALSO"
.PP
\fBmailtool\fR(1),
\fBsendmail\fR(8)\&.
