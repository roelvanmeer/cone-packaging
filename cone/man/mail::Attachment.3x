.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "mail::Attachment" "3x" "10 April 2006" "" "Extra/Miscellaneous objects/methods"

.SH NAME
mail::Attachment \- Create MIME content.
.SH SYNOPSIS

.nf
#include <libmail/attachments.H>
.fi
.SH "USAGE"
.PP
The mail::Attachment class formats a wide
variety of MIME messages from raw content.
Most of the functionality in this class is provided by the constructors.
mail::Attachment provides a variety of constructors
for creating content MIME entities, and multipart MIME entities.
.SS "CREATING CONTENT MIME ENTITIES"
.sp
\fB
.sp
mail::Attachment (std::string \fIheaders\fB, int \fIcontent_fd\fB);
.sp
mail::Attachment (std::string \fIheaders\fB, int \fIcontent_fd\fB, std::string \fIcharset\fB, std::string \fItransfer_encoding\fB="");
.sp
mail::Attachment (std::string \fIheaders\fB, std::string \fIcontent_str\fB);
.sp
mail::Attachment (std::string \fIheaders\fB, std::string \fIcontent_str\fB, std::string \fIcharset\fB, std::string \fItransfer_encoding\fB="");
\fR
.PP
A non-multipart entity is created by providing the content in a file descriptor
(\fIcontent_fd\fR) or explicitly
(\fIcontent_str\fR).
.sp
.RS
.B "Note:"
The mail::Attachment
object makes an internal copy of the file descriptor.
The original file descriptor does not need to remain open after the
mail::Attachment object is constructed.
The duplicate file descriptor will be closed automatically when the object
is destroyed.
.RE
.PP
The headers of the MIME entity are provided explicitly.
The first argument to the constructor (\fIheaders\fR)
is usually an initialized
\fBmail::Header::list\fR(3x) object.
It's \fBstd::string\fR operator will conveniently
generate a well-formed list of mail headers.
.PP
The
\fIcharset\fR and
\fItransfer_encoding\fR parameters are optional.
\fIcontent_fd\fR or \fIcontent_str\fR
provides the raw, unencoded, data for the MIME object.
The mail::Attachment object will heuristically
select the most appropriate MIME encoding if the
\fIcharset\fR and \fItransfer_encoding\fR
parameters are not provided.
.PP
The data may be either plain text, or binary data.
mail::Attachment will determine it automatically.
The optional \fIcharset\fR parameter specifies the
plain text's character set.
If specified, it will be factored into
mail::Attachment\&'s heuristic selection of the most
appropriate MIME encoding for this plain text content.
Finally, specifying \fItransfer_encoding\fR will override
mail::Attachment\&'s heuristics, and forcibly set
the MIME encoding accordingly.
.sp
.RS
.B "Note:"
To specify the MIME encoding only, specify an empty string for
\fIcharset\fR (this would be appropriate for setting the
MIME encoding - which will obviously be base64 here -
for binary content that is not associated with any character set.
.RE
.PP
\fIheaders\fR must include the Content-Type
header, but must not contain the Content-Transfer-Encoding
header, which will be provided by the
mail::Attachment
class.
.SS "PRE-FORMATTED MIME CONTENT"
.PP
It is possible to set \fIcontent_fd\fR or
\fIcontent_str\fR to something that's already MIME-formatted.
mail::Attachment will conclude that the content
is already MIME-formatted when \fIheaders\fR already contain
a Content-Transfer-Encoding header, or a
Content-Type header that sets the MIME type to
either ``message/rfc822'' or any ``multipart''
MIME type.
.PP
This is often used when the content is an existing, well-formed MIME message.
Providing a ``Content-Type: message/rfc822'' in
\fIheaders\fR creates an attached MIME message.
This is just one of the two ways to create an attached MIME message.
A better way to create an attached MIME message is described later.
.sp
.RS
.B "Note:"
A ``multipart''
Content-Type header must have a ``boundary''
parameter that actually matches the the MIME boundary delimiter in the
specified content.
.RE
.SS "CREATING MULTIPART MIME CONTENT"
.PP
A multipart MIME content is constructed by creating
mail::Attachment for each content MIME section,
then using the following multipart constructors:
.sp
\fB
.sp
mail::Attachment (std::string \fIheaders\fB, const std::vector<mail::Attachment *> &\fIparts\fB);
.sp
mail::Attachment (std::string \fIheaders\fB, const std::vector<mail::Attachment *> &\fIparts\fB, std::string \fImultipart_type\fB, const mail::mimestruct::parameterList &\fImultipart_parameters\fB);
\fR
.PP
The headers of a multipart MIME section must include a well-formed
Content-Type header set to either
``message/rfc822'' or ``multipart/\fIsubtype\fR''\&.
Alternatively, 
mail::Attachment will supply a
Content-Type header when provided with
\fImultipart_type\fR and
\fImultipart_parameters\fR\&.
.sp
.RS
.B "Note:"
\fIparts\fR must be a vector of exactly one element
when \fImultipart_type\fR (or an existing
Content-Type header) is
``message/rfc822'').
.RE
.SS "GENERATING MIME-FORMATTED MESSAGES"

.nf
mail::Attachment top_attachment;
std::string buffer;
bool errflag;

   top_attachment->begin();
   while ((buffer=top_attachment->generate(errflag)).size() > 0)
   {
       std::cout << buffer;
   }
.fi
.PP
Once all mail::Attachment objects are created,
the MIME-formatted message is generated by first calling the
\fBbegin\fR() method of the topmost
mail::Attachment object, then repeatedly calling
the \fBgenerate\fR() method until it returns an empty string.
Each call to \fBgenerate\fR() returns the next portion of the
formatted MIME message, and the empty string is returned after the entire
MIME message is produced.
All mail::Attachment objects must be destroyed
immediately afterwards.
.PP
A false \fIerrflag\fR, when
\fBgenerate\fR() returns an empty string, indicates that the
MIME-formatted message was generated succesfully.
A true \fIerrflag\fR indicated an
errno-related failure to generate the MIME-formatted
message.
.sp
.RS
.B "Note:"
\fBgenerate\fR() will supply the
``Mime-Version: 1.0'' header.
This header does not need to be explicitly included in the
\fIheaders\fR of the topmost
mail::Attachment object.
.RE
.SH "SEE ALSO"
.PP
\fBmail::Header::addresslist\fR(3x),
\fBmail::Header::encoded\fR(3x),
\fBmail::Header::mime\fR(3x),
\fBmail::Header::plain\fR(3x)\&.
