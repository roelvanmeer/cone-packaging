.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
'\" t
.\"     Title: mail::Header::mime
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 05/08/2010
.\"    Manual: Cone: COnsole Newsreader And Emailer
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "MAIL::HEADER::MIME" "3x" "05/08/2010" "[FIXME: source]" "Cone: COnsole Newsreader And E"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mail::Header::mime \- A structured MIME header\&.
.SH "SYNOPSIS"
.sp
.nf
#include <libmail/headers\&.H>

mail::Header::mime content_type("Content\-Type", "text/plain");

    content_type\&.parameters\&.set_simple("charset", "iso\-8859\-1");

mail::Header::mime content_disposition("Content\-Disposition", "attachment")
                              ("filename", "document\&.doc")
                              ("name", "Monthly Sales", "iso\-8859\-1", "EN");

std::cout << content_type\&.toString();

.fi
.SH "USAGE"
.PP
This class creates a structured MIME header\&. A structured MIME header, like
Content\-Type
or
Content\-Disposition
contains a literal value, and zero or more
\(lqname=setting\(rq
parameters, separated by semicolons\&.
.PP
Two arguments are provided to the constructor, the header\'s name, and its literal value\&. After constructing, use the
\fIparameters\fR
member to set the parameters\&. This member has the following methods:
.PP
set_simple(std::string name, std::string value)
.RS 4
Set parameter
name
to
value\&.
value
must contain
US\-ASCII
text only\&.
.RE
.PP
set(std::string name, std::string value, std::string charset, std::string language)
.RS 4
Set parameter
name
to
value\&.
charset
specifies
value\'s character set\&.
language
is optional, and specifies
value\'s language\&.
value
is converted to
US\-ASCII
text according to
\m[blue]\fBRFC 2231\fR\m[]\&\s-2\u[1]\d\s+2\&.
.RE
.PP
erase(std::string name)
.RS 4
Remove parameter
name\&.
.RE
.PP
The
\fBtoString()\fR
returns the header as a single text string:
\(lq\fIname\fR: \fIvalue\fR\(rq\&. Long headers are folded accordingly\&.
.SS "Dynamic parameter generation"
.PP
Parameters can also be dynamically populated by repeatedly calling the
\(lq()\(rq\&.
.PP
One version of the
\(lq()\(rq
operator receives the parameter name and value, and corresponds to the
\fBset_simple\fR
method\&. The second version also receives the character set and language information, and corresponds to the
\fBset\fR
function\&.
.SH "SEE ALSO"
.PP

\fBmail::Header::addresslist\fR(3x),
\fBmail::Header::encoded\fR(3x),
\fBmail::Header::list\fR(3x),
\fBmail::Header::plain\fR(3x)\&.
.SH "NOTES"
.IP " 1." 4
RFC 2231
.RS 4
\%http://www.rfc-editor.org/rfc/rfc2231.txt
.RE
