.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "mail::account::updateNotify" "3x" "10 April 2006" "" "mail::account Native API reference"

.SH NAME
mail::account::updateNotify \- Request notification of folder updates
.SH SYNOPSIS

.nf
#include <libmail/mail.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi

.nf
mail::account *account;
.fi
.sp
\fB
.sp
account->updateNotify (bool \fIenableDisable\fB, myCallback &\fIcallback\fB);
\fR
.SH "USAGE"
.PP
If supported by the mail server, this function requests that the application
be notified immediately if another application makes any changes to the
currently open folder.
This includes:
.TP 0.2i
\(bu
New mail delivered to the folder.
.TP 0.2i
\(bu
Existing messages removed from the folder.
.TP 0.2i
\(bu
Changes to the messages' flags.
.PP
These events are normally reported by invoking the
\fBnewMessages\fR,
\fBmessagesRemoved\fR, and
\fBmessageChanged\fR method of the
mail::callback::folder object that was
passed to
\fBmail::folder::open\fR(3x)\&.
.PP
These callback function normally are not generated immediately after
the corresponding events occur.
Changes to the folder's contents are usually checked only when the next
request is processed;
additionally many mail servers do not even do that, and only check for
changes when the mail clients explicitly asks the server to check for new
mail (\fBmail::account::checkNewMail\fR(3x)) or
to update the permanent message status
(
\fBmail::account::removeMessages\fR(3x) or
\fBmail::account::updateFolderIndexInfo\fR(3x)).
.PP
This method requests the server to notify the application immediately when
another application changes the folder (the
\fIenableDisable\fR parameter is true),
or to stop notifying the application
(\fIenableDisable\fR is false).
.sp
.RS
.B "Note:"
.PP
This method only works with IMAP mail accounts on IMAP servers that support
the IMAP IDLE extension, as described by
RFC
2177\&.
This method has no effect with IMAP servers that do not implement the IDLE
extension, or other mail accounts.
.PP
This method is also implemented for local mail in maildirs, on systems
running
the SGI
File Access Monitor\&.
This method has no effect on mbox mail folders, or on systems without the
FAM daemon.
.RE
.PP
The immediate update notification mode is enabled until it is explicitly
disabled.
When the immediate update notification mode is in effect with an IMAP
IDLE-capable server, any other request silently terminates the IDLE mode,
performs the request, and reenters IDLE mode.
.PP
This method is a no-op if the account does not support the update
notification mode, and
\fIcallback\fR\&'s
\fBsuccess\fR method is quietly invoked, without any
further processing.
When \fIenableDisable\fR is true, the
\fBsuccess\fR method is invoked when the IMAP server
acknowledges that it entered the IDLE mode, or
when monitoring begins on the currently open maildir folder.
When \fIenableDisable\fR is false, the
\fBsuccess\fR method is invoked when the IMAP server
acknowledges the completion of the IDLE command, and immediate update
notification mode stops (or after maildor folder monitoring stops).
.sp
.RS
.B "Note:"
When \fIenableDisable\fR is set to false, it is still
possible that some
mail::callback::folder callback methods will be
invoked before \fBsuccess\fR\&.
This occurs when the server was in the process of reporting folder changes
just before the client requested the termination of immediate update
notification.
.RE
.SH "RETURN CODES"
.PP
The application must wait until
\fIcallback\fR\&'s
\fBsuccess\fR or
\fBfail\fR method is invoked.
The \fBsuccess\fR method is invoked when this request is
succesfully processed.
The \fBfail\fR method is invoked if this request cannot
be processed.
The application must not destroy
\fIcallback\fR until either the
\fBsuccess\fR or
\fBfail\fR method is invoked.
.sp
.RS
.B "Note:"
\fIcallback\fR\&'s
\fBfail\fR method may be invoked even after other
callback methods were invoked.
This indicates that the request was partially completed before the error
was encountered.
.RE
.SH "SEE ALSO"
.PP
\fBmail::account::checkNewMail\fR(3x),
\fBmail::account::removeMessages\fR(3x),
\fBmail::account::updateFolderIndexInfo\fR(3x),
RFC
2177\&.
