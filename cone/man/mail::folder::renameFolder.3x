.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
'\" t
.\"     Title: mail::folder::renameFolder
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 05/08/2010
.\"    Manual: Cone: COnsole Newsreader And Emailer
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "MAIL::FOLDER::RENAME" "3x" "05/08/2010" "[FIXME: source]" "Cone: COnsole Newsreader And E"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mail::folder::renameFolder \- Rename a folder
.SH "SYNOPSIS"
.sp
.nf



#include <libmail/mail\&.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi
.sp
.nf
class myFolderCallback : public mail::callback::folderlist {
public:
    void success(const std::vector<const mail::folder *> &folders);
};
.fi
.sp
.nf
mail::folder *folder;
.fi
.HP \w'folder->renameFolder('u
.BI "folder->renameFolder(const\ mail::folder\ *" "newParent" ", std::string\ " "name" ", myFolderCallback\ &" "folderCallback" ", myCallback\ &" "callback" ");"
.SH "USAGE"
.PP
This function renames an existing folder\&.
\fIfolder\fR
is an existing folder or a folder directory (see
\fBmail::folder::createSubFolder\fR(3x)
for more information on folders and folder directories)\&.
\fInewParent\fR, if not NULL, specifies the new parent folder directory\&. A NULL
\fInewParent\fR
specifies that the folder should be be moved to the top level of the mail account\'s folder hierarchy\&.
.PP

\fIname\fR
specifies the new name of the folder, in the application\'s character set\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Some mail servers reserve certain characters which cannot be used in folder names\&. IMAP mail servers use a special character (usually "/" or "\&.") as a separator between names in a hierarchical folder path\&. The actual character varies from server to server\&. An attempt to create/rename a folder whose name includes a reserved character will fail\&. Different IMAP servers use different hierarchy separator characters\&. An attempt to create a folder may fail on one IMAP server even if another IMAP server can succesfully create a folder with the same name\&. This is, unfortunately, a design flaw in the IMAP protocol\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Maildir folders created by are compatible and can be read by the
\m[blue]\fBCourier\-IMAP\fR\m[]\&\s-2\u[1]\d\s+2
server\&. Names of maildir folders may contain any character, including the characters ":", "/", "\&.", "~", and ":"\&. However, if the same folders are exported via IMAP, folders whose name includes these characters may not be readable by some IMAP clients\&. Even a



LibMAIL
application may not be able to read one of these folders via IMAP\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Mbox mail folders created by



LibMAIL
are mostly compatible and can be exported by IMAP servers that read mbox\-formatted mail folders (with some limitations, such as that the same mbox folder cannot be open by



LibMAIL
and another application at the same time)\&. Names of mbox folders can contain any character, including the characters "/", and "~"\&. However if mbox folders are exported via IMAP, folders whose name includes these characters may not be readable by some IMAP clients\&.
.sp .5v
.RE
.SH "RETURN CODES AND CALLBACKS"
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\&. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\&. The
\fBfail\fR
method is invoked if this request cannot be processed\&. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\&. This indicates that the request was partially completed before the error was encountered\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
The application must not destroy
\fIfolderCallback\fR
until this request fails or succeeds\&.
\fIfolderCallback\fR\'s
\fBsuccess\fR
method is invoked just before the
\fIcallback\fR\'s
\fBsuccess\fR
method\&.
.sp .5v
.RE
.PP
If the folder was succesfully renamed, the
\fBfolderCallback\&.success\fR
method receives a vector that contains a single pointer to a
mail::folder
object that refers to this folder under its new name\&. The existing
mail::folder
object is no longer valid, and should be destroyed\&. The new
mail::folder
object should now be used to refer to this folder\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP

mail::folders are linked to their corresponding
mail::accounts\&. A
mail::folder
created by one
mail::account
may not be used with a different
mail::folder\&. All
mail::folders created by a
mail::account
are invalidated when this
mail::account
object is destroyed\&. Note that the
mail::folder
objects are not automatically destroyed; the application is still responsible for destroying any remaining
mail::folders, after their a
mail::account
is destroyed\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
The
\fBfolderCallback\&.success\fR
method receives a (possibly empty) vector of pointers to
mail::folder
objects\&. These objects will be destroyed when
\fBfolderCallback\&.success\fR
terminates\&. The application must use
\fBmail::folder::clone\fR(3x)
to create copies of
mail::folder
objects it wants to use later\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Both
\fBfolderCallback\&.success\fR
and
\fBmyCallback\&.success\fR
method will be invoked if this request succeeds\&.
\fBfolderCallback\&.success\fR
will be invoked before
\fBmyCallback\&.success\fR
(since by definition this indicates that the request has been completed)\&.
.sp .5v
.RE
.SH "SEE ALSO"
.PP

\fBmail::folder::clone\fR(3x),
\fBmail::folder::create\fR(3x),
\fBmail::folder::createSubFolder\fR(3x),
\fBmail::folder::destroy\fR(3x),
\fBmail::folder::readSubFolders\fR(3x)\&.
.SH "NOTES"
.IP " 1." 4
Courier-IMAP
.RS 4
\%http://www.courier-mta.org
.RE
