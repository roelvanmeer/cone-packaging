.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\"     Title: mail::account::open
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 11/11/2007
.\"    Manual: 


Cone: COnsole Newsreader And Emailer
.\"    Source: 
.\"
.TH "MAIL::ACCOUNT::OPEN" "3x" "11/11/2007" "" "Cone: COnsole Newsreader An"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
mail::account::open - Open a new mail account
.SH "SYNOPSIS"
.sp
.RS 4
.nf



#include <libmail/mail\.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi
.RE
.sp
.RS 4
.nf

class myDisconnectCallback : public mail::callback::disconnect {
public:
    void disconnected(const char *msg);
    void servererror(const char *msg);
};

#include <libmail/logininfo\.H>

class myPromptCallback : public mail::loginCallback {
public:
   void loginPrompt(mail::loginCallback::callbackType, std::string);
};

void myPromptCallback::loginPrompt(mail::loginCallback::callbackType cbType,
                                   string prompt)
{
    struct termios ti, ti2;

    cout << prompt << flush;

    tcgetattr(0, &ti);

    ti2=ti;

    if (cbType == PASSWORD)
    {
        ti2\.c_lflag &= ~ECHO;
        tcsetattr(0, TCSAFLUSH, &ti2);
    }

    std::string reply;

    if (getline(cin, reply)\.fail())
    {
       callbackCancel();
       return;
    }

    if (cbType != USERID)  // It\'s PASSWORD
        tcsetattr(0, TCSAFLUSH, &ti);

    callback(reply);
}

mail::account::openInfo accountOpenInfo;
myPromptCallback passwdCallback;

    accountOpenInfo\.url="imap://john@imap\.example\.com/novalidate\-cert";
    accountOpenInfo\.pwd="secret";
    accountOpenInfo\.extraString=""; // Used by nntp:, nntps:, pop3maildrop: and pop3maildrops:
    accountOpenInfo\.loginCallbackObj= &passwdCallback;


.fi
.RE
.HP 43
.BI "mail::account *account=mail::account::open(" "accountOpenInfo" ", myCallback\ &" "callback" ", myDisconnectCallback\ &" "disconnectCallback" ");"
.SH "USAGE"
.PP

\fBmail::account::open\fR
opens a mail account on a server\.
\fIurl\fR
identifies the account\.
\fIurl\fR
should contain a text string that identifies one of the following types of accounts:
.PP
imap://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
An
\fIIMAP\fR\&[1]
or an
SMAP
account on
\fIserver\fR\. The colon and
\fIport\fR
are optional; defaulting to the standard IMAP port 143\. A slash, followed by a slash\-separated list of
additional options
may follow\.
.sp

\fIuser\fR
identifies the account login id\.
\fIuser\fR
may contain any characters except
/,
@,
%, and
:\. These characters may be specified by using
%, followed by a two\-digit uppercase hexadecimal ASCII code for the character\.
.RE
.PP
pop3://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
A POP3 account on
\fIserver\fR\. The colon and
\fIport\fR
are optional; defaulting to the standard POP3 port 110\. A slash, followed by a slash\-separated list of
additional options
may follow\.
.sp

\fIuser\fR
identifies the account login id\.
\fIuser\fR
may contain any characters except
/,
@,
%, and
:\. These characters may be specified by using
%
followed by a two\-digit uppercase hexadecimal ASCII code for the character\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
The POP3 server must support the
UIDL
command, which is implemented by all modern POP3 servers\. Some very old POP3 servers may not support this command, in which case use a
pop3maildrop
URL instead\.
.RE
.PP
pop3maildrop://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Like
\(lqpop3\(rq, except that messages are downloaded, then deleted, from the POP3 server\. Use
\(lqpop3maildrop\(rq
maildrop when the remote server does not implement the
UIDL
command\.
.sp

\fIextraString\fR
must be initialized to the name of a maildir where messages from the POP3 server will be downloaded to\. If the maildir does not exist, it will be automatically created\.
.RE
.PP
nntp://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Access Usenet newsgroups via nntp on
\fIserver\fR\. The colon and
\fIport\fR
are optional; defaulting to the standard NNTP port 119\. A slash, followed by a slash\-separated list of
additional options
may follow\.
.sp

\fIextraString\fR
must be initialized to the name of a file where the list of subscribed newsgroups, and read articles, will be saved\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note




LibMAIL
uses a slightly expanded version of the traditional
\fI\.newsrc\fR
format, containing some extra header information\.


\fIuser\fR
and
\fIpwd\fR
should be specified if the NNTP server requires authentication\. Otherwise these parameters may be omitted\.
.RE
.PP
imaps://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Like "imap", but use encryption to connect to the IMAP/SMAP server, and use the default
imaps
port (usually 993)\.
.RE
.PP
pop3s://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Like
\(lqpop3\(rq, but use encryption to connect to the POP3 server, and use the default
pop3s
port (usually 995)\.
.RE
.PP
pop3maildrops://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Like
\(lqpop3maildrop\(rq, but use encryption to connect to the POP3 server, and use the default
pop3s
port (usually 995)\.
.RE
.PP
nntps://\fIuser\fR@\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Like "nntp", but use encryption to connect to the NNTP server, and use the default
nntps
port (usually 563)\.
.RE
.PP
maildir:[path]
.RS 4
Mail in a local maildir\.
[path]
specifies the path to the maildir\-type mailbox\.
[path]
may be a relative path, anchored at the home directory (NOT the process\'s current directory)\.
"maildir:Maildir"
is the usual way to open
\fI$HOME/Maildir\fR\.
.RE
.PP
mail:[path]
.RS 4
Open mail in a local mailbox\.
[path]
specifies the path to a file or a directory containing mbox\-type mailboxes\.
[path]
may be a relative path, anchored at the home directory (NOT the process\'s current directory)\.
[path]
may refer to a directory, in which case the directory\'s contents are read as mbox\-type folders\.
"maildir:Mail"
is the usual way to open mail in
\fI$HOME/Mail\fR\.
.RE
.PP
inbox:[path]
.RS 4
Open mail in a local mailbox\. This is the same as
"mail:[path]", with the additional inclusion of the default system mailbox (usually in
\fI/var/spool/mail\fR), represented by the special folder named
INBOX\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
The default system mailbox is implemented by creating
\fI$HOME/Inbox\fR, and automatically copying all mail from the default system mailbox to
\fI$HOME/Inbox\fR
(which is represented as the
INBOX)\. This is done in order to avoid having to rewrite the default system mailbox file "in place", due to restricted permissions on the spool directory\. Updating the default system mailbox in place may result in corruption if the process is interrupted while the update is in progress\. Copying mail from the default system mailbox to
\fI$HOME/Inbox\fR
allows safe access to new messages\.
.RE
.PP
smtp://[\fIuser\fR@]\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Create an account object for sending mail\. The created
mail::account\'s
\fBmail::account::getSendFolder\fR(3x)
method will create a special
mail::folder
object\. Adding a message to this "folder" will E\-mail this message via SMTP\.
.sp
The colon and
\fIport\fR
are optional; defaulting to the standard SMTP port 25\. Sometimes it is useful to specify port 587, where the message submission protocol is available (the message submission protocol is almost identical to SMTP, with the most notable difference is that authentication is required)\. A slash, followed by a slash\-separated list of
additional options
may follow\.
.sp

[user]@ is optional, and enables authenticated SMTP\.
[user]
identifies the authentication id\.
[user]
may contain any characters except
/,
@,
%, and
:\. These characters may be specified by using
%
followed by a two\-digit uppercase hexadecimal ASCII code for the character\.
.RE
.PP
smtps://[\fIuser\fR@]\fIserver\fR\fI[:port]\fR[/options]
.RS 4
Like "smtp", but use encryption to connect to the SMTP server, and use the default
smtps
port (usually 465)\.
.RE
.PP
sendmail://localhost
.RS 4
Like "smtp", but use the local
\fBsendmail\fR
command to send mail\.
.RE
.PP
There are several alternative ways to provide a login passwords for
\fIurl\fRs that require login information\.
\fIpwd\fR
should be set if the login password is known in advance\. If the login password is not known,
\fIloginCallbackObj\fR
needs to be initialized to a non\-NULL pointer\.
\fIloginCallbackObj\fR
may be set to NULL if
\fIpwd\fR
specifies a password\.
.PP

\fIloginCallbackObj\fR\'s
\fBloginPrompt\fR
method will be invoked to obtain the login password, if one is needed\. If
\fIurl\fR
does not specify the login ID either,
\fBloginPrompt\fR
will be invoked twice: once to obtain the login ID, the second time to obtain the login password\.
.PP
If
\fIloginCallbackObj\fR
is not NULL, the object must not be destroyed until the login request ultimately succeeds, or fails\.
.PP
The application\'s implementation of the
\fIloginCallbackObj\fR\'s
\fBloginPrompt\fR
method obtains the account\'s login id or password, and invokes the
\fBmail::loginCallback::callback\fR
method\.
\fBloginPrompt\fR
receives two parameters:
\fIcallbackType\fR
is either
USERID
or
PASSWORD, and it indicates whether the application needs to return the login id, or the password; and a suggested prompt\.
.PP

\fBloginPrompt\fR
can call
\fBmail::loginCallback::callbackCancel\fR
to indicate that the login process should be aborted\. Note that the act of invoking
\fBcallbackCancel\fR
does not officially fail the login request; the application is subsequently notified, in the usual manner, that the login request failed\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

\fBloginPrompt\fR
is invoked from within



LibMAIL
; as such no



LibMAIL
calls can be made (except for
\fBmail::loginCallback::callback\fR
or
\fBmail::loginCallback::callbackCancel\fR)\. Note that all



LibMAIL
processing is halted until
\fBloginPrompt\fR
terminates\. If the password is already known,
\fBloginPrompt\fR
may invoke
\fBmail::loginCallback::callback\fR
immediately\. This is also the only option with the
Synchronous API, since
\fBmail::ACCOUNT::login\fR(3x)
does not return control to the application until the login process completes\.
.PP
Applications that use the asynchronous
Native API
have another option\.
\fBloginPrompt\fR
gets invoked by
\fBmail::account::process\fR(3x)\.
\fBloginPrompt\fR
may terminate without invoking
\fBmail::loginCallback::callback\fR\. The application may then prompt for the requested information after
\fBmail::account::process\fR(3x)
returns, and invoke either
\fBmail::loginCallback::callback\fR
or
\fBmail::loginCallback::callbackCancel\fR, at some point later down the road, which will result in the eventual completion of the login request\. Note that the login request may fail before the application calls
\fBmail::loginCallback::callback\fR
or
\fBmail::loginCallback::callbackCancel\fR\. This can occur if the server closed the login connection before the application supplied the login id or password\.
.SS "Account Options"
.PP
The following options may be appended to
\fIurl\fR
for some account types\. Multiple options may be listed in any order:
.PP
/cram
.RS 4
Do not open the account unless the server supports secure password authentication\. Secure password authentication verifies the account\'s password using a challenge/response authentication mechanism (where the label "cram" comes from)\. The actual password is never actually transmitted to the server, and therefore cannot be intercepted while in transit over an untrusted network\.
.sp
Secure password authentication is not supported by all servers\. This option may not work with some servers\. This option does not enable secure password authentication, it only mandates its use\. If the server supports secure password authentication, it will be used even without the
/cram
option\. Traditional userid/password authentication will be used only if the server does not implement secure password authentication\. The
/cram
option makes secure password authentication mandatory\.
.sp
The
/cram
option is marginally useful even with encrypted server connections\. The secure password authentication never sends the explicit password to the server\. Encryption makes it theoretically impossible to recover the password from an encrypted data connection; but with secure authentication the password is never sent over the connection in the first place (the password\'s validity is certified by exchanging certain mathematical calculations between the server and the client)\. If the server is compromised, the compromised server will not receive the account password (unless the password is recovered from the server in other ways)\.
.RE
.PP
/debugio
.RS 4
Enable a debugging option that logs all network traffic for this account to standard error\.
.RE
.PP
/imap
.RS 4
Do not use the
SMAP
if the server claims the availability of this experimental mail access protocol, and fall back to IMAP compatibility mode (this option is meaningful only with
\(lqimap://\(rq
and
\(lqimaps://\(rq
URLs)\.
.RE
.PP
/notls
.RS 4
Do not upgrade a plain connection to an encrypted one\. This option is primarily used for testing and debugging purposes\. Sometimes this option might be useful with servers that claim to offer encryption, but are unable to do so when taken up on their offer\.
.RE
.PP
/novalidate\-cert
.RS 4
Do not validate the server\'s SSL certificate when using an encrypted connection\. Normally the mail server\'s SSL certificate must be validate when using an encrypted connection\. The certificate\'s name must match the server\'s name, and the certificate must be signed by a trusted certificate authority\.
.sp
The encrypted connection normally fails if the certificate cannot be validate\. Validation requires that a list of trusted certificate authorities must be known and configured\. It\'s simply impossible to know which certificate authorities are valid without an explicit list of valid, known, trusted, certificate authorities\. If a trusted authority list is not configured, no certificate can be validated\. If the server\'s certificate is a self\-signed certificate (this is often used for testing purposes), or if it\'s not signed by a known authority, the encrypted connection fails\.
.sp
This
/novalidate\-cert
option disables certificate validation\. The encrypted connection will be established even if the server\'s certificate would otherwise be rejected\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
This option is applicable even when an encrypted IMAP or POP3 connection is not explicitly requested\. Many mail servers are capable of automatically upgrading unencrypted connections to a fully\-encrypted connection\. If a mail server claims to be able to use encryption, then there\'s no reason not to use it\. The result is that all encryption certification requirements still apply even when encryption is not explicitly requested\.
.RE
.PP
/timeout=\fIN\fR
.RS 4
Close the connection if the IMAP/SMAP, POP3, or NNTP server does not respond to a command in
\fIN\fR
seconds (default: 60)\.
.RE
.PP
/noop=\fIN\fR
.RS 4
Check for new messages in the currently open IMAP/SMAP folder every
\fIN\fR
seconds (default: 600)\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
Most IMAP servers implement a protocol extension that reports new messages (and other changes to the folder\'s contents) immediately, without waiting for an explicit request to check for new mail\.

This option is also used by POP3 folders, where it defaults to 60 seconds\. POP3 does not provide for new mail notification; the option\'s only purpose is to prevent the POP3 server from disconnecting due to inactivity\.
.RE
.PP
/autologout=\fIN\fR
.RS 4
Automatically close an NNTP connection after
\fIN\fR
seconds of inactivty (default: 300)\. The connection will be automatically reestablished, when necessary\.
.RE
.SH "RETURN CODES AND CALLBACKS"
.PP

\fBmail::account::open\fR
allocates and returns a
mail::account
object\. However, the mail account may not be fully open, and ready for business\. Like most other functions the application must wait until the
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\.
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\. The
\fBfail\fR
method is invoked if this request cannot be processed\. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\. This indicates that the request was partially completed before the error was encountered\.
.PP

\fBmail::account::open\fR
returns a
NULL
pointer in the event of an immediate failure, in addition to invoking the
\fBfail\fR
method\.
\fBmail::account::open\fR
may also invoke the
\fBsuccess\fR
method before it returns, however in most cases the
\fBsuccess\fR
method will be invoked by
\fBmail::account::process\fR() at a later time\.
.PP
The application may not destroy the
\fIcallback\fR
object until either method is invoked\.
.PP
The
\fIdisconnectCallback\fR\'s
\fBdisconnected\fR
method will be invoked whenever the connection to the mail server terminates\. The
\fBdisconnected\fR
method may or may not be invoked if the initial connection to the server fails (applications should not rely on either behavior)\. The
\fBdisconnected\fR
method will be invoked when the account is closed even for account types that do not normally use a network connection (such as a local mail account)\.
.PP
The
\fIdisconnectCallback\fR\'s
\fBservererror\fR
method may be invoked at any time, whenever an error is reported by the server that\'s not directly caused by the currently requested mail operation, and the error is not severe enough to result in a disconnection from the server\.
\fBservererror\fR
should display the error message in a highly visible manner\.
.PP
Applications are responsible for destroying
mail::account
objects after they are no longer needed\.
.PP
The
\fIdisconnectCallback\fR
object may not be destroyed until after the
mail::account
object is destroyed\.
.SH "SEE ALSO"
.PP

\fBmail::account::getSendFolder\fR(3x),
\fBmail::account::isRemoteUrl\fR(3x),
\fBmail::loginUrlEncode\fR(3x),
\fBmail::account::process\fR(3x),
\fBmail::account::readTopLevelFolders\fR(3x),
\fBmail::setAppCharset\fR(3x)\.
.SH "NOTES"
.IP " 1." 4
IMAP
.RS 4
\%http://www.rfc-editor.org/rfc/rfc2060.txt
.RE
