.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\"     Title: mail::account::readMessageContentDecoded
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 11/11/2007
.\"    Manual: 


Cone: COnsole Newsreader And Emailer
.\"    Source: 
.\"
.TH "MAIL::ACCOUNT::READM" "3x" "11/11/2007" "" "Cone: COnsole Newsreader An"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
mail::account::readMessageContentDecoded - Read decoded message contents
.SH "SYNOPSIS"
.sp
.RS 4
.nf
#include <libmail/mail\.H>
#include <libmail/envelope\.H>
#include <libmail/structure\.H>

class myCallbackMessage : public mail::callback::message {
public:
    void success(std::string msg);
    void fail(std::string msg);

    void messageEnvelopeCallback(size_t messageNumber,
                                 const mail::envelope &envelopeArg);

    void messageReferencesCallback(size_t messageNumber,
                                   const std::vector<std::string> &referencesArg);

    void messageArrivalDateCallback(size_t messageNumber,
                                    time_t datetime);

    void messageSizeCallback(size_t messageNumber,
                             unsigned long size);

    void messageStructureCallback(size_t messageNumber,
                                  const mail::mimestruct &messageStructure);
    void messageTextCallback(size_t messageNumber, std::string text);
};

std::cout << (float)myMessageCallback\.messageTextCompleted /
             (float)myMessageCallback\.messageTextEstimatedSize * 100
          << "% completed\." << endl;

.fi
.RE
.sp
.RS 4
.nf
mail::account *account;
.fi
.RE
.HP 35
.BI "account->readMessageContentDecoded(size_t\ " "messageNum" ", bool\ " "peek" ", mail::mimestruct\ &" "msgInfo" ", bool\ " "justHeader" ", bool\ " "justContents" ", myCallbackMessage\ &" "callback" ");"
.SH "USAGE"
.PP
This function is similar to
\fBmail::account::readMessageContent\fR(3x), with one difference:
quoted\-printable
and
base64
MIME content is automatically decoded\. The
\fBmail::callback::message::messageTextCallback\fR
function receives the decoded, binary, content\.
.SH "RETURN CODES"
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\. The
\fBfail\fR
method is invoked if this request cannot be processed\. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\. This indicates that the request was partially completed before the error was encountered\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Multiple applications may have the same account and folder opened at the same time\. It is possible that a message referenced by this request was already deleted by another application\. Depending on the underlying server implementation this will result in either a failed request, invoking
\fBcallback\.fail\fR, or the request completing (\fBcallback\.success\fR
invoked) but without invoking any callback function that refer to the message\.
.SH "SEE ALSO"
.PP

\fBmail::account::readMessageAttributes\fR(3x),
\fBmail::account::readMessageContent\fR(3x)\.
