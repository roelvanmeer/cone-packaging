.\"<!-- Copyright 2002-2010 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
'\" t
.\"     Title: mail::account::readMessageContentDecoded
.\"    Author: Sam Varshavchik
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 04/04/2011
.\"    Manual: Cone: COnsole Newsreader And Emailer
.\"    Source: 
        Cone\(co
      
.\"  Language: English
.\"
.TH "MAIL::ACCOUNT::READM" "3x" "04/04/2011" "Cone\(co" "Cone: COnsole Newsreader And E"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mail::account::readMessageContentDecoded \- Read decoded message contents
.SH "SYNOPSIS"
.sp
.nf
#include <libmail/mail\&.H>
#include <libmail/envelope\&.H>
#include <libmail/structure\&.H>

class myCallbackMessage : public mail::callback::message {
public:
    void success(std::string msg);
    void fail(std::string msg);

    void messageEnvelopeCallback(size_t messageNumber,
                                 const mail::envelope &envelopeArg);

    void messageReferencesCallback(size_t messageNumber,
                                   const std::vector<std::string> &referencesArg);

    void messageArrivalDateCallback(size_t messageNumber,
                                    time_t datetime);

    void messageSizeCallback(size_t messageNumber,
                             unsigned long size);

    void messageStructureCallback(size_t messageNumber,
                                  const mail::mimestruct &messageStructure);
    void messageTextCallback(size_t messageNumber, std::string text);
};

std::cout << (float)myMessageCallback\&.messageTextCompleted /
             (float)myMessageCallback\&.messageTextEstimatedSize * 100
          << "% completed\&." << endl;

.fi
.sp
.nf
mail::account *account;
.fi
.HP \w'account->readMessageContentDecoded('u
.BI "account->readMessageContentDecoded(size_t\ " "messageNum" ", bool\ " "peek" ", mail::mimestruct\ &" "msgInfo" ", bool\ " "justHeader" ", bool\ " "justContents" ", myCallbackMessage\ &" "callback" ");"
.SH "USAGE"
.PP
This function is similar to
\fBmail::account::readMessageContent\fR(3x), with one difference:
quoted\-printable
and
base64
MIME content is automatically decoded\&. The
\fBmail::callback::message::messageTextCallback\fR
function receives the decoded, binary, content\&.
.SH "RETURN CODES"
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\&. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\&. The
\fBfail\fR
method is invoked if this request cannot be processed\&. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\&. This indicates that the request was partially completed before the error was encountered\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Multiple applications may have the same account and folder opened at the same time\&. It is possible that a message referenced by this request was already deleted by another application\&. Depending on the underlying server implementation this will result in either a failed request, invoking
\fBcallback\&.fail\fR, or the request completing (\fBcallback\&.success\fR
invoked) but without invoking any callback function that refer to the message\&.
.sp .5v
.RE
.SH "SEE ALSO"
.PP

\fBmail::account::readMessageAttributes\fR(3x),
\fBmail::account::readMessageContent\fR(3x)\&.
.SH "AUTHOR"
.PP
\fBSam Varshavchik\fR
.RS 4
.RE
