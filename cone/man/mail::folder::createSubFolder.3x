.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\"     Title: mail::folder::createSubFolder
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 11/11/2007
.\"    Manual: 


Cone: COnsole Newsreader And Emailer
.\"    Source: 
.\"
.TH "MAIL::FOLDER::CREATE" "3x" "11/11/2007" "" "Cone: COnsole Newsreader An"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
mail::folder::createSubFolder - Create a new folder
.SH "SYNOPSIS"
.sp
.RS 4
.nf



#include <libmail/mail\.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi
.RE
.sp
.sp
.RS 4
.nf
class myFolderCallback : public mail::callback::folderlist {
public:
    void success(const std::vector<const mail::folder *> &folders);
};
.fi
.RE
.sp
.RS 4
.nf
mail::folder *folder;
.fi
.RE
.HP 24
.BI "folder->createSubFolder(std::string\ " "name" ", bool\ " "createDirectory" ", myFolderCallback\ &" "folderCallback" ", myCallback\ &" "callback" ");"
.SH "USAGE"
.PP
Most mail accounts support the ability to create and delete folders, which are arranged in a tree\-like hierarchy\.
\fBmail::folder::createSubFolder\fR
creates a new folder, as a subfolder of
\fIfolder\fR
(which does not necessarily have to refer the currently open folder; it may be any
mail::folder
object that\'s associated with an active
mail::account)\.
.PP
Folders may be created in IMAP accounts, and local mail (either mbox or maildir) accounts\. Folders cannot be created in POP3 accounts, as this functionality is not supported by the POP3 protocol (this operation will fail)\.
.PP
There are two types of folders: folder that contain messages (regular folders), and folders that contain other sub\-folders ("folder directories", or "directories" for short)\.
\fIisDirectory\fR
specifies whether the new folder is a regular folder, or a folder directory\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Local maildir\-based accounts, and some IMAP servers, are capable of supporting so\-called "dual\-purpose" folders; folders that contain both messages and other sub\-folders\. A dual\-purpose folder may be created by invoking
\fBmail::folder::createSubFolder\fR
twice, once with
\fIisDirectory\fR
set to
false; and a second time with
\fIisDirectory\fR
set to
true, specifying the same
\fIname\fR
both times\.
.PP

\fIname\fR
specifies the name of the new folder, in the application\'s character set\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Some mail servers reserve certain characters which cannot be used in folder names\. IMAP mail servers use a special character (usually "/" or "\.") as a separator between names in a hierarchical folder path\. The actual character varies from server to server\. An attempt to create/rename a folder whose name includes a reserved character will fail\. Different IMAP servers use different hierarchy separator characters\. An attempt to create a folder may fail on one IMAP server even if another IMAP server can succesfully create a folder with the same name\. This is, unfortunately, a design flaw in the IMAP protocol\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Maildir folders created by are compatible and can be read by the
\fICourier\-IMAP\fR\&[1]
server\. Names of maildir folders may contain any character, including the characters ":", "/", "\.", "~", and ":"\. However, if the same folders are exported via IMAP, folders whose name includes these characters may not be readable by some IMAP clients\. Even a



LibMAIL
application may not be able to read one of these folders via IMAP\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Mbox mail folders created by



LibMAIL
are mostly compatible and can be exported by IMAP servers that read mbox\-formatted mail folders (with some limitations, such as that the same mbox folder cannot be open by



LibMAIL
and another application at the same time)\. Names of mbox folders can contain any character, including the characters "/", and "~"\. However if mbox folders are exported via IMAP, folders whose name includes these characters may not be readable by some IMAP clients\.
.SH "RETURN CODES AND CALLBACKS"
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\. The
\fBfail\fR
method is invoked if this request cannot be processed\. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\. This indicates that the request was partially completed before the error was encountered\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
The application must not destroy
\fIfolderCallback\fR
until this request fails or succeeds\.
\fIfolderCallback\fR\'s
\fBsuccess\fR
method is invoked just before the
\fIcallback\fR\'s
\fBsuccess\fR
method\.
.PP
If the folder was succesfully created, the
\fBfolderCallback\.success\fR
method receives a vector that contains a single pointer to a
mail::folder
object\. The
mail::folder
object will refer to the newly\-created folder\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

mail::folders are linked to their corresponding
mail::accounts\. A
mail::folder
created by one
mail::account
may not be used with a different
mail::folder\. All
mail::folders created by a
mail::account
are invalidated when this
mail::account
object is destroyed\. Note that the
mail::folder
objects are not automatically destroyed; the application is still responsible for destroying any remaining
mail::folders, after their a
mail::account
is destroyed\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
The
\fBfolderCallback\.success\fR
method receives a (possibly empty) vector of pointers to
mail::folder
objects\. These objects will be destroyed when
\fBfolderCallback\.success\fR
terminates\. The application must use
\fBmail::folder::clone\fR(3x)
to create copies of
mail::folder
objects it wants to use later\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Both
\fBfolderCallback\.success\fR
and
\fBmyCallback\.success\fR
method will be invoked if this request succeeds\.
\fBfolderCallback\.success\fR
will be invoked before
\fBmyCallback\.success\fR
(since by definition this indicates that the request has been completed)\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
For some kinds of accounts,
\fBmail::folder::readSubFolders\fR(3x)
may not enumerate new folder directories until they contain at least one folder\. Therefore the recommended process to create a new folder directory is as follows:
.sp
.RS 4
\h'-04'\(bu\h'+03'Invoke
\fBmail::folder::createSubFolder\fR
to request the creation of a new folder directory\.
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'In
\fBfolderCallback\.success\fR, use
\fBmail::folder::clone\fR(3x)
to save a copy of the
mail::folder
object which refers to the new folder directory\.
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'After the
\fBmyCallback\.success\fR
method is invoked, use the saved
mail::folder
object\'s
\fBcreateSubFolder\fR
method to create a new folder in the new folder directory\.
.RE
.SH "SEE ALSO"
.PP

\fBmail::folder::clone\fR(3x),
\fBmail::folder::create\fR(3x),
\fBmail::folder::destroy\fR(3x),
\fBmail::folder::readSubFolders\fR(3x),
\fBmail::folder::renameFolder\fR(3x)\.
.SH "NOTES"
.IP " 1." 4
Courier-IMAP
.RS 4
\%http://www.courier-mta.org
.RE
