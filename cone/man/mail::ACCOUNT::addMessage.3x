.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
'\" t
.\"     Title: mail::ACCOUNT::addMessage
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.74.3 <http://docbook.sf.net/>
.\"      Date: 10/31/2009
.\"    Manual: Cone: COnsole Newsreader And Emailer
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "MAIL::ACCOUNT::ADDME" "3x" "10/31/2009" "[FIXME: source]" "Cone: COnsole Newsreader And E"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mail::ACCOUNT::addMessage \- Add a message to a folder
.SH "SYNOPSIS"
.sp
.nf



#include <libmail/sync\&.H>

#include <libmail/addmessage\&.H>

mail::ACCOUNT *mail;

class myAddMessagePull : public mail::addMessagePull {

public:
    std::string getMessageContents();
};

time_t messageDate;
mail::messageInfo newMessageInfo;
myAddMessagePull message;

    message\&.messageDate=messageDate;
    message\&.newMessageInfo=newMessageInfo;
.fi
.HP \w'bool\ ok=mail->addMessage('u
.BI "bool ok=mail->addMessage(const\ mail::folder\ *" "folder" ", " "message" ");"
.sp
.nf
std::string errmsg=mail\->getErrmsg();
.fi
.SH "USAGE"
.PP
This method inserts a message into a folder\&.
\fIfolder\fR
specifies the folder where the message is added to, which may or may not be the currently open folder\&.
.PP

\fImessage\fR\'s
\fBgetMessageContents\fR
specifies the contents of the message, which should be a valid, MIME\-formatted message\&.
\fBgetMessageContents\fR
does not have to return the entire contents of the message at once\&.
\fBaddMessage\fR
calls
\fBgetMessageContents\fR
repeatedly\&.
\fBgetMessageContents\fR
should return the next portion of the message with each call\&.
\fBgetMessageContents\fR
should return an empty string, after providing the entire message contents are provided\&.
\fBgetMessageContents\fR
will be called repeatedly until it returns an empty string\&.
.PP
The application may set the following
mail::addMessagePull
fields before invoking this method\&. If not initialized, the following fields will be set to their default values\&.
.PP
messageDate
.RS 4
The message\'s arrival timestamp, which is retrieved by
\fBmail::ACCOUNT::getMessageEnvelope\fR(3x), which places it in the
\fIarrivalDate\fR
field\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
This timestamp does not necessarily have to be the same as the timestamp in the message\'s
Date:
header\&.
.sp .5v
.RE
.RE
.PP
messageInfo
.RS 4
The message flags, as returned by
\fBmail::ACCOUNT::getFolderIndexInfo\fR(3x)\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
The contents of
\fIuid\fR, the message\'s unique ID, are ignored, only the message flags in
\fImessageInfo\fR
are read\&. The message gets automatically assigned a new unique ID when it gets added to the folder\&.
.sp .5v
.RE
.RE
.SH "RETURN CODES"
.PP
This method returns
true
if it succeeds, or
false
if it fails\&. If the method fails, use
\fImail::ACCOUNT::getErrmsg()\fR
to read a brief description of the error\&.
.SH "SEE ALSO"
.PP

\fBmail::ACCOUNT::checkNewMail\fR(3x)\&.
