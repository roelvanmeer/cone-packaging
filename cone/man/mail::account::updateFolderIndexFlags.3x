.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "mail::account::updateFolderIndexFlags" "3x" "10 April 2006" "" "mail::account Native API reference"

.SH NAME
mail::account::updateFolderIndexFlags \- Update status of multiple messages
.SH SYNOPSIS

.nf
#include <libmail/mail.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi

.nf
mail::account *account;
.fi
.sp
\fB
.sp
account->updateFolderIndexFlags (const std::vector<size_t> \fImsgList\fB, bool \fIdoFlip\fB, bool \fIenableDisable\fB, const messageInfo &\fImsgInfo\fB, myCallback &\fIcallback\fB);
\fR
.SH "USAGE"
.PP
This is a version of
\fBmail::account::saveFolderIndexInfo\fR(3x)
that updates the status of multiple messages with one request.
.PP
\fImsgList\fR specifies a list of messages.
Messages are numbered starting with message #0 and up to one
less than
\fBmail::account::getFolderIndexSize\fR(3x)()
(when \fBmail::account::getFolderIndexSize\fR returns 6,
the messages are numbered 0 through 5).
Only the messages that appear in \fImsgList\fR are
processed by this request.
.PP
\fImsgInfo\fR selects which message status flags
should be updated in every message.
See
\fBmail::account::getFolderIndexInfo\fR(3x)\&.
.PP
\fImsgInfo\fR does NOT specify the new value of the status
flags, only which status flags should be updated.
For example, setting
\fImsgInfo\fR\&.\fBmarked\fR
to true indicates that the messages' \fBmarked\fR status
flag will be set to the value specified by
\fIdoFlip\fR and
\fIenableDisable\fR\&.
.PP
Setting \fIdoFlip\fR to true "flips"
the selected status flags (each message's flag will be set to false if
the status flag was originally
true, and set to true if the status flag was originalfalse).
If \fIdoFlip\fR is false, then the selected
status flags are set to the value of \fIenableDisable\fR
\fIenableDisable\fR is ignored when
Setting \fIdoFlip\fR is true.
.SH "RETURN CODES"
.PP
The application must wait until
\fIcallback\fR\&'s
\fBsuccess\fR or
\fBfail\fR method is invoked.
The \fBsuccess\fR method is invoked when this request is
succesfully processed.
The \fBfail\fR method is invoked if this request cannot
be processed.
The application must not destroy
\fIcallback\fR until either the
\fBsuccess\fR or
\fBfail\fR method is invoked.
.sp
.RS
.B "Note:"
\fIcallback\fR\&'s
\fBfail\fR method may be invoked even after other
callback methods were invoked.
This indicates that the request was partially completed before the error
was encountered.
.RE
.sp
.RS
.B "Note:"
The application is notified about when a message's status changes by
by invoking the
\fBmessageChanged\fR callback method of the currently
opened folder's
mail::folderCallback object.
Depending on the mail server, the
\fBmessageChanged\fR method may be
invoked as part of processing this request,
or some time later after this request is completed,
and \fIcallback\fR\&'s \fBsuccess\fR
method was invoked.
.RE
.sp
.RS
.B "Note:"
Multiple applications may have the same account and folder opened at the
same time.
It is possible that a message referenced by this request was already
deleted by another application.
Depending on the underlying server implementation this will result in
either a failed request, invoking
\fBcallback.fail\fR, or the request completing
(\fBcallback.success\fR invoked) but without invoking
any callback function that refer to the message.
.RE
.SH "SEE ALSO"
.PP
\fBmail::account::saveFolderIndexInfo\fR(3x),
\fBmail::account::getFolderIndexInfo\fR(3x)\&.
