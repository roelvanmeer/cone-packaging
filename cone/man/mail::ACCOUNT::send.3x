.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "mail::ACCOUNT::send" "3x" "10 April 2006" "" "mail::ACCOUNT Synchronous API reference"

.SH NAME
mail::ACCOUNT::send \- Send a message
.SH SYNOPSIS

.nf
#include <libmail/sync.H>

#include <libmail/smtpinfo.H>

mail::ACCOUNT *mail;

class myAddMessagePull : public mail::addMessagePull {

public:
    std::string getMessageContents();
};

myAddMessagePull message;

mail::smtpInfo info;

info.sender="nobody@example.com";

info.recipients.push_back("recipient@example.com");
.fi
.sp
\fB
.sp
bool ok=mail->send (\fIinfo\fB, const mail::folder *\fIsaveFolder\fB, \fImessage\fB);
\fR

.nf
std::string errmsg=mail->getErrmsg();
.fi
.SH "USAGE"
.PP
This method sends a message via SMTP.
The application should create a
mail::ACCOUNT object, and invoke
\fBmail::ACCOUNT::login\fR(3x)
specifying a
smtp:,
smtps: or
sendmail:
\fIurl\fR\&.
The resulting mail::ACCOUNT\&'s
\fBsend\fR method will be able to deliver the
\fImessage\fR\&.
.PP
\fImessage\fR\&'s
\fBgetMessageContents\fR
specifies the contents of the message, which should be a valid, MIME-formatted
message.
\fBgetMessageContents\fR
does not have to return the entire contents of the message at once.
\fBaddMessage\fR calls
\fBgetMessageContents\fR
repeatedly.
\fBgetMessageContents\fR
should return the next portion of the message with each call.
\fBgetMessageContents\fR
should return
an empty string, after providing the entire message contents are provided.
\fBgetMessageContents\fR
will be called repeatedly until it returns an empty string.
.SS "SAVEFOLDER"
.PP
\fIsaveFolder\fR, if not NULL,
specifies that a copy of the message should also be saved in this folder.
If this mail account uses the experimental
SMAP protocol, a single copy of the message
will be transmitted to the SMAP server, which will file
the message in the folder, and send it to the designated recipients.
Otherwise the message is manually saved to this folder using
\fBmail::folder::addMessage\fR(3x),
or
\fBmail::ACCOUNT::addMessage\fR(3x)\&.
.SS "THE MAIL::SMTPINFO OBJECT"
.PP
\fIinfo\fR specifies the following parameters
which are used to deliver the message:

.nf
class mail::smtpInfo {
public:
	std::string sender;

	std::vector<std::string> recipients;

	std::map<std::string, std::string> options;
} ;
.fi
.PP
\fBsender\fR specifies the sender's E-mail address,
in the form of
"\fIuser\fR@\fIdomain\fR".
\fBrecipients\fR is a list of recipients' E-mail
addresses.
At least one recipient must be specified.
.PP
\fBoptions\fR specifies additional parameters for
sending E-mail, initialized as follows:
.TP
\fBoptions.insert(make_pair("novalidate-cert", "1"))\fR
See
\fBmail::account::open\fR(3x))
for a description of this option.
.TP
\fBoptions.insert(make_pair("cram", "1"))\fR
See
\fBmail::account::open\fR(3x))
for a description of this option.
.TP
\fBoptions.insert(make_pair("DSN", "\fIlist\fB"))\fR
Request a delivery status notification.
\fIlist\fR is a comma-separated
list of the following keywords:
"never" - do not request any receipts, not even
non-delivery notices;
"success" - request a delivery confirmation receipt;
"fail" - request a non-delivery notice;
"delay" - request a delayed delivery notice.
.sp
.RS
.B "Note:"
An error will be reported if the mail server does not implement
delivery status notifications.
.RE
.TP
\fBoptions.insert(make_pair("RET", "hdrs"))\fR
Request that the delivery status notification should not include the entire
original message, only its headers.
.TP
\fBoptions.insert(make_pair("RET", "full"))\fR
Request that the delivery status notifications should include the entire
original message.
.TP
\fBoptions.insert(make_pair("NOPIPELINING", "1"))\fR
Do not use the PIPELINING SMTP
extension even if the mail server claims to support it
(workaround for buggy firewalls).
.TP
\fBoptions.insert(make_pair("VERP", "1"))\fR
Use the VERP mailing list extension.
If the \fBsender\fR address is
"\fIsender\fR@\fIsenddomain\fR",
then a delivery status notification for
"\fIrecipient\fR@\fIrecipientdomain\fR"
will be sent to "\fIsender\fR-\fIrecipient\fR=\fIrecipientdomain\fR@\fIsenddomain\fR" (with certain additional details).
This option is currently implemented only by the
Courier
mail server\&.
.TP
\fBoptions.insert(make_pair("SECURITY", "STARTTLS"))\fR
The message must be sent via TLS, and the recipient's server must present
a certificate signed by a trusted, private, certificate authority.
This option is currently implemented only by the
Courier
mail server\&.
.sp
.RS
.B "Note:"
This is not the standard STARTTLS ESMTP
extension.
STARTTLS is always used automatically, if
it's supported by the mail server.
.RE
.SH "RETURN CODES"
.PP
This method returns true if it succeeds, or
false if it fails.
If the method fails, use
\fBmail::ACCOUNT::getErrmsg()\fR to read a brief
description of the error.
.SH "SEE ALSO"
.PP
\fBmail::ACCOUNT::login\fR(3x)\&.
