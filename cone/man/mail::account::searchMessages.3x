.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
'\" t
.\"     Title: mail::account::searchMessages
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 05/08/2010
.\"    Manual: Cone: COnsole Newsreader And Emailer
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "MAIL::ACCOUNT::SEARC" "3x" "05/08/2010" "[FIXME: source]" "Cone: COnsole Newsreader And E"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mail::account::searchMessages \- Search messages in the current folder
.SH "SYNOPSIS"
.sp
.nf



#include <libmail/mail\&.H>

#include <libmail/search\&.H>

class myCallback : public mail::searchCallback {
public:
    void success(const std::vector<size_t> &found);
    void fail(std::string errmsg);
};




mail::searchParams mySearchParams;

mySearchParams\&.criteria=\fIcriteria\fR;
mySearchParams\&.searchNot=\fInotFlag\fR;
mySearchParams\&.param1="\fItext\fR";
mySearchParams\&.param2="\fItext\fR";
mySearchParams\&.charset="\fItext\fR";
mySearchParams\&.scope=\fIscope\fR;

.fi
.HP \w'account->searchMessages('u
.BI "account->searchMessages(const\ std::vector<size_t>\ " "msgList" ", myCallback\ &" "callback" ");"
.SH "USAGE"
.PP

\fBmail::account::searchMessages\fR
searches messages in the currently\-open folder\&.



\fImsgList\fR
specifies a list of messages\&. Messages are numbered starting with message #0 and up to one less than
\fBmail::account::getFolderIndexSize\fR(3x)() (when
\fBmail::account::getFolderIndexSize\fR
returns 6, the messages are numbered 0 through 5)\&. Only the messages that appear in
\fImsgList\fR
are processed by this request\&.
.PP

\fImySearchParams\&.criteria\fR
specifies the search type\&.
\fImySearchParams\&.searchNot\fR
is a bool; setting it to
true
logically negates the search type\&. For example, if
\fImySearchParams\&.criteria\fR
is
mail::searchParams::on
then setting
\fImySearchParams\&.searchNot\fR
to
true
will search for messages NOT sent on the specified date\&.
.PP

\fImySearchParams\&.param1\fR
and
\fImySearchParams\&.param2\fR
specify additional parameters used by some search criterias\&.
\fImySearchParams\&.charset\fR
specifies
\fImySearchParams\&.param2\fR\'s character set\&.
\fImySearchParams\&.param1\fR\'s character set is always
ISO\-8859\-1\&.
.PP

\fImySearchParams\&.scope\fR
specifies the scope of the search, and must be set to one of the following:
.PP
search_all
.RS 4
Search all messages in the folder\&.
.RE
.PP
search_marked
.RS 4
Search only messages that have
\fImail::messageInfo::marked\fR
set to
true\&.
.RE
.PP
search_unmarked
.RS 4
Search only messages that have
\fImail::messageInfo::marked\fR
set to
false\&.
.RE
.PP
search_ranges
.RS 4
Search only message #\fIrangeLo\fR
through message #\fIrangeHi\fR\-1\&.
.RE
.PP
Complex search criteria may be performed as follows:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Clear
\fImail::messageInfo::marked\fR
status flags on all messages (use
\fBmail::account::updateFolderIndexFlags\fR(3x)
or
\fBmail::ACCOUNT::updateFolderIndexFlags\fR(3x)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Execute a search with
\fImySearchParams\&.scope\fR
set to
search_unmarked\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Use
\fBmail::account::updateFolderIndexFlags\fR(3x)
or
\fBmail::ACCOUNT::updateFolderIndexFlags\fR(3x)
to set the
\fImail::messageInfo::marked\fR
flag on messages found by the first search\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Run additional searches, with
\fImySearchParams\&.scope\fR
set accordingly; and use
\fBmail::account::updateFolderIndexFlags\fR(3x)
or
\fBmail::ACCOUNT::updateFolderIndexFlags\fR(3x)
to set or reset the
\fImail::messageInfo::marked\fR
flag on messages found by the search\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
The
\fImail::messageInfo::marked\fR
status flag\'s usage is not limited to searches\&.
\fImail::messageInfo::marked\fR
is a generic flag that applications may use for their own purposes\&. Searching is one such particular application for this flag\&.
.PP
Some IMAP servers do not implemented the
\fImail::messageInfo::marked\fR
status flag, and there\'s no such thing as a status flag in the POP3 protocol\&. When
\fImail::messageInfo::marked\fR
status flag is not implemented by the server,
mail::account
will synthesize a suitable replacement that will work just like the real thing (except that the status flags of messages will not be saved when the folder is closed)\&.
.sp .5v
.RE
.SS "Search Criteria"
.PP

\fImySearchParams\&.criteria\fR
must be set to one of the following constants:
.PP
mail::searchParams::replied
.RS 4
Search for messages with the
\fImail::messageInfo::replied\fR
status flag set\&.
.RE
.PP
mail::searchParams::deleted
.RS 4
Search for messages with the
\fImail::messageInfo::deleted\fR
status flag set\&.
.RE
.PP
mail::searchParams::draft
.RS 4
Search for messages with the
\fImail::messageInfo::draft\fR
status flag set\&.
.RE
.PP
mail::searchParams::unread
.RS 4
Search for messages with the
\fImail::messageInfo::unread\fR
status flag set\&.
.RE
.PP
mail::searchParams::from
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in their
From:
header\&.
.RE
.PP
mail::searchParams::to
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in their
To:
header\&.
.RE
.PP
mail::searchParams::cc
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in their
Cc:
header\&.
.RE
.PP
mail::searchParams::bcc
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in their
Bcc:
header\&.
.RE
.PP
mail::searchParams::subject
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in their
Subject:
header\&.
.RE
.PP
mail::searchParams::header
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in a header whose name is
\fImail::searchParams\&.param1\fR\&.
.RE
.PP
mail::searchParams::body
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in the message\'s contents\&.
.RE
.PP
mail::searchParams::text
.RS 4
Search for messages where
\fImail::searchParams\&.param2\fR
occurs in the message\'s contents or headers\&.
.RE
.PP
mail::searchParams::before
.RS 4
Search for messages received before the date specified by
\fImail::searchParams\&.param2\fR\&.
.RE
.PP
mail::searchParams::on
.RS 4
Search for messages received on the date specified by
\fImail::searchParams\&.param2\fR\&.
.RE
.PP
mail::searchParams::since
.RS 4
Search for messages received on or after the date specified by
\fImail::searchParams\&.param2\fR\&.
.RE
.PP
mail::searchParams::sentbefore
.RS 4
Search for messages whose
Date:
header contains a date before the date specified by
\fImail::searchParams\&.param2\fR\&.
.RE
.PP
mail::searchParams::senton
.RS 4
Search for messages whose
Date:
header contains a date specified by
\fImail::searchParams\&.param2\fR\&.
.RE
.PP
mail::searchParams::sentsince
.RS 4
Search for messages whose
Date:
header contains a date specified by
\fImail::searchParams\&.param2\fR, or later\&.
.RE
.PP
mail::searchParams::larger
.RS 4
Search for messages whose approximate size is at least as the number of bytes specified by
\fImail::searchParams\&.param2\fR\&.
.RE
.PP
mail::searchParams::smaller
.RS 4
Search for messages whose approximate size is less than the number of bytes specified by
\fImail::searchParams\&.param2\fR\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP

\fImail::searchParams\&.param2\fR
contains a text string of the form "mm\-ddd\-yyyy" for date\-related search criteria (example:
"12\-Oct\-2001")\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Usenet servers offer very limited searching facilities\&. Consequently, searching NetNews folders will be slow, and inefficient\&. Searching on status flags is reasonably fast, since



LibMAIL
maintains status flags of NetNews folders internally\&. The following search parameters use the
NNTP XPAT
command, provides that the search string uses only the
US\-ASCII
alphabet, and will also be reasonably fast:
mail::searchParams::from,
mail::searchParams::to,
mail::searchParams::cc,
mail::searchParams::bcc,
mail::searchParams::subject, and
mail::searchParams::header\&.
.PP
For all other searches, or if the search string uses characters outside of the
US\-ASCII
character set,



LibMAIL
will download each message individually, in order to search it\&. That\'s going to be very, very slow\&.
.PP
Additionally, most Usenet servers\'s
NNTP XPAT
is case sensitive\&. All other searches are case insensitive\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Efficient searching is implemented for local mail, and IMAP/SMAP mailboxes only\&. NetNews servers\' searching capabilities are very limited, and POP3 servers have no search facilities whatsoever\&. In all cases, searching for message status flags is supported, since message status flags are always cached locally\&.
.PP
Only message headers of NetNews folders may be searched, and only English characters can be used as a search string\&. Some older NetNews servers may not have any searching ability whatsoever\&. Searching of message contents is not supported\&. Searching by message size, or message\'s date is not supported either\&.
.PP
Searching of POP3 folders is also not very efficient, although the search text is not limited to English characters only\&. POP3 folder search is accomplished by downloading the complete headers of each message, and searching it manually\&. Downloaded headers are not cached\&. The headers are also downloaded when searching by message\'s date\&. Searching by message size, or message\'s date is not supported for POP3 folders\&.
.sp .5v
.RE
.SH "RETURN CODES"
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\&. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\&. The
\fBfail\fR
method is invoked if this request cannot be processed\&. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\&. This indicates that the request was partially completed before the error was encountered\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Multiple applications may have the same account and folder opened at the same time\&. It is possible that a message referenced by this request was already deleted by another application\&. Depending on the underlying server implementation this will result in either a failed request, invoking
\fBcallback\&.fail\fR, or the request completing (\fBcallback\&.success\fR
invoked) but without invoking any callback function that refer to the message\&.
.sp .5v
.RE
.PP
The
\fBmail::searchCallback::success\fR
method receives a vector that lists all messages found by the search\&. The vector will be empty if no messages were found\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
The vector with found messages is destroyed as soon as the
\fBmail::searchCallback::success\fR
method terminates\&. The application should make a copy of it for any later use\&.
.sp .5v
.RE
.SH "SEE ALSO"
.PP

\fBmail::account::getFolderIndexInfo\fR(3x)\&.
