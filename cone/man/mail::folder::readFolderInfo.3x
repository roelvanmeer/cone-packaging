.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\"     Title: mail::folder::readFolderInfo
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 11/28/2008
.\"    Manual: Cone: COnsole Newsreader And Emailer
.\"    Source: 
.\"
.TH "MAIL::FOLDER::READFO" "3x" "11/28/2008" "" "Cone: COnsole Newsreader And E"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
mail::folder::readFolderInfo - Get folder status
.SH "SYNOPSIS"
.sp
.RS 4
.nf



#include <libmail/mail\.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi
.RE
.sp
.RS 4
.nf
mail::folder *folder;

class myFolderInfoCallback : public mail::callback::folderInfo {

public:
        void success()
        {
            displayFolderStatus(messageCount, unreadCount);
        }
};
.fi
.RE
.HP 23
.BI "folder->readFolderInfo(myFolderInfoCallback\ &" "folderInfoCallback" ", myCallback\ &" "callback" ");"
.SH "USAGE"
.PP
This function reads the current status of
\fIfolder\fR, which may refer to any folder in the mail account (not necessarily the currently open folder)\.
.PP

\fIfolderInfoCallback\fR\'s
\fBsuccess\fR
method will be invoked when the folder\'s status is determined\. The following variables will be initialized prior to invoking
\fBsuccess\fR:
.PP
messageCount
.RS 4
Total number of messages in the folder\.
.RE
.PP
unreadCount
.RS 4
Total number of unread messages in the folder\.
.RE
.PP
fastInfo
.RS 4
This field should be initialized before calling this function\. If set to
true
the message counts are returned only if they can be computed quickly\. Otherwise
\fIfolderInfoCallback\fR\'s
\fBsuccess\fR
method will not be invoked at all, but
\fIcallback\fR\'s
\fBsuccess\fR
method will still be invoked\.
.sp
If this field is set to
false
(the default), the message counts are returned in all cases\.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

\fIfolderInfoCallback\fR\'s
\fBsuccess\fR
method will be invoked just prior to
\fIcallback\fR\'s
\fBsuccess\fR
method (unless
fastInfo
is true and message counts cannot be computed cheaply)\. The application must still wait until
\fIcallback\fR\'s
\fBsuccess\fR, or
\fBfail\fR
is invoked, and must not destroy the
mail::callback::folderInfo
object until either method has been invoked\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP
Message count computation is considered cheap with maildir\-based and POP3\-based accounts\. Message count computation is considered expensive with mbox\-based accounts, and with IMAP\-based accounts\.
.SH "RETURN CODES AND CALLBACKS"
.PP
The application must wait until
\fIcallback\fR\'s
\fBsuccess\fR
or
\fBfail\fR
method is invoked\. The
\fBsuccess\fR
method is invoked when this request is succesfully processed\. The
\fBfail\fR
method is invoked if this request cannot be processed\. The application must not destroy
\fIcallback\fR
until either the
\fBsuccess\fR
or
\fBfail\fR
method is invoked\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
.PP

\fIcallback\fR\'s
\fBfail\fR
method may be invoked even after other callback methods were invoked\. This indicates that the request was partially completed before the error was encountered\.
.SH "SEE ALSO"
.PP

\fBmail::account::checkNewMail\fR(3x),
\fBmail::folder::open\fR(3x)\.
