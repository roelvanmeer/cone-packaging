.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "mail::account::getSendFolder" "3x" "10 April 2006" "" "mail::account Native API reference"

.SH NAME
mail::account::getSendFolder \- Create a folder object for sending mail
.SH SYNOPSIS

.nf
#include <libmail/mail.H>


class myCallback : public mail::callback {
public:
    void success(std::string msg);
    void fail(std::string msg);
};
.fi

.nf

#include <libmail/smtpinfo.H>
#include <libmail/addmessage.H>

mail::account *account;

mail::smtpInfo info;

info.sender="nobody@example.com";

info.recipients.push_back("recipient@example.com");
.fi
.sp
\fB
.sp
mail::folder *folder=account->getSendFolder (const mail::smtpInfo &\fIinfo\fB, const mail::folder *\fIsaveFolder\fB, std::string \fIerrmsg\fB);
\fR

.nf
myCallback sendCallback;

mail::addMessage *addMessage= folder->addMessage(sendCallback);

addMessage->saveMessageContents(std::string messageText);
addMessage->go();
.fi
.SH "USAGE"
.PP
This function creates a special folder object:
copying a message to
this folder will E-mail it to the designated recipient list.
The mail::account object must be an account that's
capable of creating this kind of a folder (such as
smtp accounts created by
\fBmail::account::open\fR(3x)).
The message may be manually added to the folder with
\fBmail::folder::addmessage\fR(3x),
or by copying a message
from another folder using
\fBmail::folder::copyMessagesTo\fR(3x)\&.
.sp
.RS
.B "Note:"
Multiple messages may be copied to this mail::folder\&.
Each messages is E-mail separately, to all recipients.
Excersize caution to prevent an accidental request to copy an entire folder,
with thousand messages, to a thousand recipients.
.RE
.SS "SAVEFOLDER"
.PP
\fIsaveFolder\fR, if not NULL,
specifies that a copy of the message should also be saved in this folder.
If this mail account uses the experimental
SMAP protocol, a single copy of the message
will be transmitted to the SMAP server, which will file
the message in the folder, and send it to the designated recipients.
Otherwise the message is manually saved to this folder using
\fBmail::folder::addMessage\fR(3x),
or
\fBmail::ACCOUNT::addMessage\fR(3x)\&.
.SS "THE MAIL::SMTPINFO OBJECT"
.PP
\fIinfo\fR specifies the following parameters
which are used to deliver the message:

.nf
class mail::smtpInfo {
public:
	std::string sender;

	std::vector<std::string> recipients;

	std::map<std::string, std::string> options;
} ;
.fi
.PP
\fBsender\fR specifies the sender's E-mail address,
in the form of
"\fIuser\fR@\fIdomain\fR".
\fBrecipients\fR is a list of recipients' E-mail
addresses.
At least one recipient must be specified.
.PP
\fBoptions\fR specifies additional parameters for
sending E-mail, initialized as follows:
.TP
\fBoptions.insert(make_pair("novalidate-cert", "1"))\fR
See
\fBmail::account::open\fR(3x))
for a description of this option.
.TP
\fBoptions.insert(make_pair("cram", "1"))\fR
See
\fBmail::account::open\fR(3x))
for a description of this option.
.TP
\fBoptions.insert(make_pair("DSN", "\fIlist\fB"))\fR
Request a delivery status notification.
\fIlist\fR is a comma-separated
list of the following keywords:
"never" - do not request any receipts, not even
non-delivery notices;
"success" - request a delivery confirmation receipt;
"fail" - request a non-delivery notice;
"delay" - request a delayed delivery notice.
.sp
.RS
.B "Note:"
An error will be reported if the mail server does not implement
delivery status notifications.
.RE
.TP
\fBoptions.insert(make_pair("RET", "hdrs"))\fR
Request that the delivery status notification should not include the entire
original message, only its headers.
.TP
\fBoptions.insert(make_pair("RET", "full"))\fR
Request that the delivery status notifications should include the entire
original message.
.TP
\fBoptions.insert(make_pair("NOPIPELINING", "1"))\fR
Do not use the PIPELINING SMTP
extension even if the mail server claims to support it
(workaround for buggy firewalls).
.TP
\fBoptions.insert(make_pair("VERP", "1"))\fR
Use the VERP mailing list extension.
If the \fBsender\fR address is
"\fIsender\fR@\fIsenddomain\fR",
then a delivery status notification for
"\fIrecipient\fR@\fIrecipientdomain\fR"
will be sent to "\fIsender\fR-\fIrecipient\fR=\fIrecipientdomain\fR@\fIsenddomain\fR" (with certain additional details).
This option is currently implemented only by the
Courier
mail server\&.
.TP
\fBoptions.insert(make_pair("SECURITY", "STARTTLS"))\fR
The message must be sent via TLS, and the recipient's server must present
a certificate signed by a trusted, private, certificate authority.
This option is currently implemented only by the
Courier
mail server\&.
.sp
.RS
.B "Note:"
This is not the standard STARTTLS ESMTP
extension.
STARTTLS is always used automatically, if
it's supported by the mail server.
.RE
.SH "RETURN CODES AND CALLBACKS"
.PP
\fBmail::account::getSendFolder\fR returns NULL
if this
mail::account object is not capable of sending
mail.
\fIerrmsg\fR is initialized with an appropriate error
message.
.SH "SEE ALSO"
.PP
\fBmail::account::open\fR(3x)\&.
