.\"<!-- $Id: book.sgml,v 1.3 2004/05/30 02:43:00 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAIL::ADDRESS" "3x" "10 April 2006" "" "Extra/Miscellaneous objects/methods"

.SH NAME
mail::address \- An E-mail address
.SH SYNOPSIS

.nf
#include <libmail/rfcaddr.H>

mail::address address("John Smith", "johnsmith@example.com");

std::string addr=address.getAddr();
std::string name=address.getName();

address.setAddr(addr);
address.setName(name);

std::string str=address.toString();

std::vector<mail::address> addressList;

std::string header= mail::address::toString("From: ", addressList,
                                            size_t width=76);

size_t errorIndex;

bool error=mail::address::fromString(std::string addresses,
                                     addressList,
                                     errorIndex);

std::string stdAddr=address.getCanonAddress();

mail::address addr1, addr2;

bool same= addr1 == addr2;
bool notsame= addr1 != addr2;
.fi
.SH "USAGE"
.PP
mail::address represents a single E-mail address.
An E-mail address consists of the recipient's name, and the actual address
in the format of
\fIuser\fR@\fIdomain\fR\&.
The name and the address components may be accessed or changed by
\fBgetName()\fR,
\fBgetAddr()\fR,
\fBsetName()\fR and
\fBsetAddr()\fR methods.
.sp
.RS
.B "Note:"
.PP
mail::emailAddress would be a more appropriate
class for most situations.
The name component used by
\fBgetName()\fR and
\fBsetName()\fR methods is the Internet-format, MIME-encoded
name.
mail::emailAddress is a subclass of
mail::address, and provides more convenient methods
for working with the name component of an E-mail address.
.PP
The \fBtoString\fR and
\fBfromString\fR methods, defined below, will take a vector
of either
mail::emailAddress or
mail::address objects, and in all other ways
both classes are freely interchangable, and may be converted to one
another.
.RE
.PP
The \fBtoString\fR method converts an address to a text string
formatted as "name <user@domain>".
A second \fBtoString\fR function creates an E-mail header
that contains a comma-separated list of E-mail addresses.
The first parameter must be the header's name (with a trailing space
character); the second parameter is a reference to a vector of
mail::address objects.
An optional third parameter sets the maximum line width; the text string
returned by \fBtoString\fR will have newline characters,
if necessary to make sure that each line is shorter than the specified
maximum.
.PP
\fBfromString\fR does the opposite: it converts the contents
of an E-mail
header to an array of mail::address objects.
The first parameter is the E-mail header's contents
(\fBwithout\fR Header-Name:).
The second parameter is a reference to a vector of
mail::address objects.
\fBfromString\fR returns false if a fatal error has occured
(out of memory, or something else).
\fIerrorIndex\fR is normally set to
string::npos\&.
If the header cannot be parsed;
\fIerrorIndex\fR is set to the index of the character
in \fIaddresses\fR where a syntax error was
found (the header is still parsed, and any recognizable addresses are
still saved in
\fIaddressList\fR).
.PP
\fIaddressList\fR should be empty.
Otherwise the addresses are appended to
\fIaddressList\fR\&'s existing contents.
.SS "COMPARING ADDRESSES"
.PP
The \fIdomain\fR part of an E-mail address is
case insensitive, however the
\fIuser\fR part of an E-mail address is not case
insensitive.
It is up to each individual \fIdomain\fR whether or
not the
\fIuser\fR part is case sensitive, or not.
Since it is not possible to determine whether
\fIuser\fR is case sensitive; the
\fBgetCanonAddress\fR method returns the E-mail address as
\fIuser\fR@\fIdomain\fR, with
only the
\fIdomain\fR part converted to lowercase.
.PP
The object also defines the equality and non-equality operators, which
compare the address portion of two
mail::address objects (the name portions are
ignored), with the
\fIdomain\fR part of each domain being case
insensitive
.SH "SEE ALSO"
.PP
\fBmail::emailAddress\fR(3x),
\fBmail::envelope\fR(3x)\&.
