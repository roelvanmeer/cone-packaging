.\"<!-- $Id: book.sgml,v 1.4 2007/04/05 02:35:33 mrsam Exp $ -->
.\"<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
.\"<!-- distribution information. -->
.\"     Title: mail::loginUrlDecode
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.72.0 <http://docbook.sf.net/>
.\"      Date: 05/13/2007
.\"    Manual: 


Cone: COnsole Newsreader And Emailer
.\"    Source: 
.\"
.TH "MAIL::LOGINURLDECODE" "3x" "05/13/2007" "" "Cone: COnsole Newsreader An"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
mail::loginUrlDecode \- Decode a mail account URL
.SH "SYNOPSIS"
.sp
.RS 4
.nf
      


#include <libmail/mail.H>

#include <libmail/logininfo.H>

mail::loginInfo urlInfo;
.fi
.RE
.HP 35
.BI "bool ok=mail::account::loginDecode(std::string\ " "url" ", " "urlInfo" ");"
.sp
.RS 4
.nf
std::string method=urlInfo.method;
std::string server=urlInfo.server;
std::string uid=urlInfo.uid;
std::string pwd=urlInfo.pwd;
std::map<std::string, std::string>::iterator
    optionBegin=urlInfo.options.begin(),
    optionEnd=urlInfo.options.end();
.fi
.RE
.SH "USAGE"
.PP
This function does the opposite of
\fBmail::loginUrlEncode\fR(3x); a mail account URL string is broken down into its components:
.PP
method
.RS 4
The protocol name.
.RE
.PP
server
.RS 4
The name of the mail account's server
.RE
.PP
uid
.RS 4
The mail account login ID.
.RE
.PP
pwd
.RS 4
The mail account's password, if specified by the URL.
.RE
.PP
options
.RS 4
This map lists any additional options specified by the URL (all
\(lq/\fIname\fR=\fIvalue\fR\(rq
options are placed into this map).
.RE
.SH "RETURN CODES"
.PP
This function returns
true
if
\fIurlInfo\fR
(a reference to a
mail::loginInfo
object) was initialized from the contents of a valid URL, or
false
if the URL was not valid.
.SH "SEE ALSO"
.PP

\fBmail::loginUrlEncode\fR(3x).
